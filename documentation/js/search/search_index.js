var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.843,1,1.836]],["body/modules/AppModule.html",[0,1.338,1,3.623,2,1.451,3,1.451,4,1.738,5,1.738,6,1.332,7,1.738,8,1.738,9,2.76,10,2.76,11,3.254,12,0.032,13,3.425,14,3.106,15,3.352,16,2.339,17,1.738,18,1.738,19,0.276,20,0.235,21,0.235,22,3.307,23,3.714,24,0.508,25,0.458,26,1.917,27,2.131,28,3.307,29,2.339,30,3.307,31,3.307,32,2.339,33,3.307,34,2.339,35,3.307,36,3.307,37,3.307,38,5.029,39,3.307,40,3.307,41,0.319,42,0.046,43,0.016,44,0.022,45,0.016]],["title/modules/CacheModule.html",[0,0.843,11,1.836]],["body/modules/CacheModule.html",[0,1.5,2,1.844,3,1.844,4,2.209,5,2.209,6,1.693,7,2.964,8,2.209,11,3.574,12,0.031,16,2.73,17,2.209,18,2.209,19,0.351,20,0.298,21,0.298,24,0.433,25,0.582,34,3.24,41,0.405,42,0.058,43,0.021,44,0.026,45,0.021,46,3.508,47,3.508,48,4.202,49,4.202]],["title/injectables/CacheService.html",[34,1.665,50,0.264]],["body/injectables/CacheService.html",[12,0.032,19,0.347,20,0.295,21,0.295,24,0.347,25,0.576,34,2.712,41,0.4,42,0.057,43,0.021,44,0.025,45,0.021,50,0.43,51,1.305,52,3.469,53,0.456,54,1.157,55,5.867,56,0.707,57,4.156,58,0.932,59,5.61,60,5.159,61,1.202,62,0.778,63,4.156,64,3.469,65,4.156,66,3.469,67,2.184,68,4.156,69,2.679,70,4.156,71,2.679]],["title/classes/CreateUserInput.html",[42,0.044,72,1.39]],["body/classes/CreateUserInput.html",[12,0.032,19,0.188,20,0.16,21,0.16,24,0.377,41,0.436,42,0.067,43,0.011,44,0.017,45,0.011,53,0.447,56,0.692,62,0.422,67,1.779,72,1.486,73,0.989,74,1.306,75,1.962,76,3.148,77,3.28,78,3.28,79,0.672,80,2.237,81,2.357,82,2.182,83,2.79,84,1.962,85,2.254,86,3.28,87,2.254,88,2.621,89,3.28,90,2.621,91,1.949,92,2.254,93,2.254,94,1.881,95,2.621,96,2.254,97,2.254,98,2.182,99,3.28,100,2.182,101,2.182,102,2.182,103,2.182,104,2.182,105,2.182,106,1.08,107,1.962,108,1.962,109,3.647,110,3.704,111,1.453,112,1.453,113,1.453,114,2.182,115,1.185,116,0.989,117,2.182,118,2.914,119,0.989,120,1.185,121,0.769,122,1.185,123,1.453,124,1.254,125,0.989,126,1.453,127,1.08,128,1.962,129,1.306,130,1.453,131,1.675,132,1.453,133,1.453,134,2.05,135,1.453,136,1.453,137,1.453,138,2.182,139,2.621,140,2.182,141,1.453,142,1.453,143,1.08,144,1.453,145,1.453]],["title/injectables/ErrorsInterceptor.html",[50,0.264,146,2.299]],["body/injectables/ErrorsInterceptor.html",[12,0.032,19,0.315,20,0.268,21,0.268,24,0.448,25,0.524,41,0.364,42,0.052,43,0.019,44,0.024,45,0.019,50,0.405,51,1.188,53,0.415,54,1.09,56,0.644,58,0.848,61,1.093,62,0.708,79,0.524,83,1.812,146,3.528,147,3.156,148,2.817,149,3.133,150,2.717,151,2.488,152,3.286,153,3.781,154,1.006,155,1.006,156,1.006,157,1.523,158,3.113,159,2.745,160,3.156,161,2.817,162,3.781,163,1.988,164,3.781,165,2.192,166,3.156,167,3.781,168,3.781,169,3.781,170,3.781,171,3.781]],["title/modules/GraphqlModule.html",[0,0.843,13,1.836]],["body/modules/GraphqlModule.html",[0,1.5,2,1.844,3,1.844,4,2.209,5,2.209,6,1.693,7,2.964,8,2.209,12,0.031,13,3.574,16,2.73,17,2.209,18,2.209,19,0.351,20,0.298,21,0.298,24,0.433,25,0.582,29,3.24,41,0.405,42,0.058,43,0.021,44,0.026,45,0.021,172,3.508,173,3.508,174,4.202,175,4.202]],["title/injectables/GraphqlService.html",[29,1.665,50,0.264]],["body/injectables/GraphqlService.html",[12,0.033,19,0.174,20,0.308,21,0.148,24,0.39,25,0.289,27,1.343,29,1.677,41,0.201,42,0.029,43,0.01,44,0.016,45,0.01,50,0.266,51,0.654,53,0.229,54,0.715,56,0.543,58,0.467,61,0.603,62,0.962,67,1.095,71,2.056,79,0.289,91,0.999,120,1.677,124,1.609,125,2.054,131,1.609,134,0.839,143,1.858,151,1.906,154,0.554,155,0.554,156,0.554,157,1.285,176,1.512,177,4.343,178,1.343,179,1.739,180,2.367,181,2.084,182,2.084,183,2.316,184,3.19,185,2.084,186,3.19,187,1.739,188,2.799,189,3.625,190,2.084,191,3.017,192,1.849,193,2.316,194,1.989,195,2.367,196,1.512,197,1.343,198,3.19,199,2.084,200,3.235,201,3.625,202,3.73,203,2.813,204,3.19,205,3.19,206,1.739,207,3.19,208,1.512,209,2.084,210,2.813,211,2.663,212,3.19,213,2.084,214,2.084,215,2.084,216,2.084,217,4.343,218,3.19,219,2.084,220,1.739,221,2.084,222,2.084,223,3.19,224,2.084,225,2.084,226,2.084,227,2.084,228,2.084,229,2.084,230,2.084,231,2.084,232,2.084,233,2.084,234,2.084,235,2.084,236,2.084,237,2.084,238,2.663,239,3.876,240,3.876,241,2.084,242,2.084,243,2.084,244,2.084,245,2.084,246,2.084,247,2.084,248,2.084,249,2.084,250,2.084,251,2.084,252,2.084,253,2.084,254,2.084,255,2.084,256,3.19,257,2.084,258,2.084,259,2.084,260,2.084,261,3.19,262,2.084,263,2.084,264,2.084,265,2.084,266,3.19,267,2.084,268,2.084,269,2.084,270,2.084]],["title/injectables/HttpCacheInterceptor.html",[50,0.264,271,2.299]],["body/injectables/HttpCacheInterceptor.html",[12,0.032,19,0.31,20,0.264,21,0.264,24,0.31,25,0.516,42,0.051,43,0.018,44,0.024,45,0.018,50,0.401,51,1.168,53,0.408,54,1.078,56,0.633,58,0.834,62,0.9,79,0.516,80,1.781,150,2.7,154,0.989,155,0.989,156,0.989,157,1.498,194,2.269,271,3.49,272,4.014,273,3.105,274,4.809,275,5.329,276,4.809,277,4.809,278,3.719,279,5.329,280,2.156,281,3.105,282,3.719,283,3.719,284,5.329,285,3.719,286,3.719,287,3.719,288,3.719]],["title/classes/HttpExceptionFilter.html",[42,0.044,289,2.299]],["body/classes/HttpExceptionFilter.html",[12,0.032,19,0.313,20,0.267,21,0.267,24,0.313,25,0.521,41,0.362,42,0.052,43,0.019,44,0.024,45,0.019,53,0.413,54,1.085,56,0.639,58,0.842,61,1.399,73,1.648,79,0.521,128,2.177,154,0.999,155,0.999,156,0.999,159,4.105,194,2.278,195,1.8,201,3.135,280,2.177,289,3.513,290,4.04,291,3.135,292,5.354,293,4.469,294,4.839,295,5.354,296,5.655,297,3.756,298,3.756,299,2.727,300,3.756,301,3.756,302,2.177,303,3.756,304,3.756,305,4.839,306,3.756,307,3.756,308,3.756,309,3.756,310,3.756]],["title/injectables/LoggerMiddleware.html",[50,0.264,311,2.299]],["body/injectables/LoggerMiddleware.html",[12,0.032,19,0.337,20,0.287,21,0.287,24,0.337,25,0.56,41,0.389,42,0.056,43,0.02,44,0.025,45,0.02,50,0.423,51,1.268,53,0.443,54,1.136,56,0.687,58,0.905,61,1.167,79,0.56,151,2.548,154,1.074,155,1.074,156,1.074,210,2.931,211,4.622,280,2.34,299,4.019,311,3.678,312,3.37,313,5.067,314,5.067,315,4.037,316,2.931,317,5.067,318,4.037,319,4.037]],["title/injectables/LoggingInterceptor.html",[50,0.264,320,2.299]],["body/injectables/LoggingInterceptor.html",[12,0.032,19,0.318,20,0.27,21,0.27,24,0.449,25,0.528,41,0.367,42,0.052,43,0.019,44,0.024,45,0.019,50,0.407,51,1.196,53,0.418,54,1.095,56,0.648,58,0.854,61,1.101,62,0.713,79,0.528,148,2.829,149,3.146,150,2.724,151,2.494,152,3.294,154,1.013,155,1.013,156,1.013,157,1.534,158,3.123,161,2.829,163,2.001,165,2.207,166,3.178,194,1.534,320,3.543,321,3.178,322,3.807,323,3.807,324,3.807,325,3.807,326,4.881,327,3.807,328,3.807,329,3.807]],["title/classes/LoginResponse.html",[42,0.044,119,1.39]],["body/classes/LoginResponse.html",[12,0.032,19,0.205,20,0.174,21,0.174,24,0.393,41,0.454,42,0.069,43,0.012,44,0.018,45,0.012,53,0.47,56,0.418,62,0.459,67,1.896,72,1.077,73,1.077,74,1.422,75,2.09,76,2.732,77,3.043,78,3.043,79,0.593,80,2.236,81,1.422,82,1.582,83,2.724,84,1.422,86,2.756,88,2.325,89,3.038,90,2.325,91,1.729,95,2.325,98,2.325,99,3.384,100,2.325,101,2.325,102,2.325,103,2.325,104,2.325,105,2.325,106,1.176,107,2.09,108,2.09,109,3.775,110,3.775,111,1.582,112,1.582,113,1.582,114,2.325,115,1.29,116,1.077,117,2.325,118,3.038,119,1.583,120,2.247,121,0.837,122,1.29,123,1.582,124,1.336,125,1.077,126,1.582,127,1.176,128,2.09,129,1.422,130,1.582,131,1.746,132,1.582,133,1.582,134,2.115,135,1.582,136,1.582,137,1.582,138,2.325,139,2.756,140,2.325,141,1.582,142,1.582,143,1.176,144,1.582,145,1.582,330,2.454]],["title/classes/LoginUserInput.html",[42,0.044,116,1.39]],["body/classes/LoginUserInput.html",[12,0.032,19,0.196,20,0.167,21,0.167,24,0.385,41,0.444,42,0.068,43,0.012,44,0.017,45,0.012,53,0.458,56,0.594,62,0.439,67,1.834,72,1.03,73,1.03,74,1.361,75,2.023,76,2.674,77,3.256,78,3.256,79,0.639,80,2.236,81,2.023,82,1.513,83,2.78,84,1.361,86,2.685,88,2.685,89,3.33,90,2.685,91,1.997,94,1.959,95,2.685,98,2.249,99,3.33,100,2.249,101,2.249,102,2.249,103,2.249,104,2.249,105,2.249,106,1.125,107,2.023,108,2.023,109,3.684,110,3.739,111,1.513,112,1.513,113,1.513,114,2.249,115,1.234,116,1.531,117,2.249,118,2.973,119,1.03,120,1.234,121,0.8,122,1.234,123,1.513,124,1.293,125,1.03,126,1.513,127,1.125,128,2.023,129,1.361,130,1.513,131,1.709,132,1.513,133,1.513,134,2.081,135,1.513,136,1.513,137,1.513,138,2.249,139,2.685,140,2.249,141,1.513,142,1.513,143,1.125,144,1.513,145,1.513,331,2.347,332,2.347,333,2.347,334,2.347]],["title/classes/MyLogger.html",[42,0.044,335,2.299]],["body/classes/MyLogger.html",[0,0.564,1,1.228,6,1.765,12,0.033,19,0.177,20,0.15,21,0.15,24,0.485,25,0.448,41,0.204,42,0.029,43,0.01,44,0.016,45,0.01,53,0.233,54,0.724,56,0.803,58,1.058,61,0.934,62,0.397,66,1.769,73,0.93,79,0.654,80,2.244,83,2.382,91,1.016,124,0.785,131,0.785,134,1.302,154,1.255,155,1.255,156,1.255,188,1.366,192,2.27,193,1.538,194,1.765,195,1.016,208,2.345,210,1.538,220,2.697,280,1.228,299,3.423,316,1.538,335,2.843,336,1.366,337,3.916,338,3.231,339,3.231,340,3.231,341,3.231,342,2.119,343,2.697,344,3.916,345,2.119,346,3.231,347,2.119,348,3.231,349,2.119,350,3.231,351,2.119,352,2.119,353,1.538,354,2.119,355,2.119,356,1.769,357,3.269,358,4.97,359,3.231,360,2.119,361,2.697,362,2.697,363,2.697,364,3.231,365,1.769,366,2.083,367,1.769,368,2.697,369,2.083,370,2.119,371,2.119,372,1.538,373,1.769,374,1.769,375,2.119,376,1.769,377,2.119,378,2.119,379,2.119,380,2.119,381,2.119,382,3.231,383,3.231,384,2.119,385,2.119,386,2.119,387,2.119,388,3.231,389,2.119,390,2.119,391,2.119,392,2.119,393,2.119,394,1.538,395,1.769,396,1.769,397,2.119,398,2.119,399,3.269,400,2.345,401,2.119,402,2.119,403,3.231,404,2.119,405,2.119,406,2.119,407,2.119,408,2.119,409,2.119,410,2.119,411,2.119,412,2.119,413,2.119,414,2.119,415,2.119,416,3.231,417,2.119,418,2.119,419,2.119,420,2.119]],["title/interfaces/Response.html",[302,1.836,421,1.836]],["body/interfaces/Response.html",[12,0.032,19,0.33,20,0.281,21,0.281,24,0.457,25,0.548,41,0.482,42,0.054,43,0.02,44,0.025,45,0.02,50,0.417,53,0.434,61,1.143,62,0.74,75,2.898,79,0.548,148,2.291,150,2.396,151,1.735,152,2.898,157,1.592,158,2.898,161,2.898,163,2.078,165,2.291,302,2.898,421,2.291,422,3.953,423,2.869,424,4.962,425,4.577,426,3.3,427,2.548,428,3.3]],["title/guards/RolesGuard.html",[429,2.299,430,2.299]],["body/guards/RolesGuard.html",[12,0.032,19,0.29,20,0.247,21,0.247,24,0.384,25,0.482,41,0.335,42,0.048,43,0.017,44,0.023,45,0.017,50,0.384,53,0.382,54,1.032,56,0.783,58,0.78,61,1.006,62,0.862,79,0.638,121,1.57,124,1.289,125,1.527,127,2.206,150,2.632,154,1.225,155,1.225,156,1.225,157,1.402,178,2.243,194,2.212,196,2.526,197,2.243,206,3.843,280,2.017,281,2.904,353,2.526,430,3.341,431,3.479,432,2.904,433,5.49,434,3.479,435,5.867,436,3.479,437,4.603,438,3.479,439,3.341,440,3.479,441,3.479,442,3.479,443,3.479,444,3.479,445,3.479,446,3.479]],["title/injectables/TimeoutInterceptor.html",[50,0.264,447,2.299]],["body/injectables/TimeoutInterceptor.html",[12,0.032,19,0.33,20,0.281,21,0.281,24,0.457,25,0.548,41,0.381,42,0.054,43,0.02,44,0.025,45,0.02,50,0.417,51,1.241,53,0.434,54,1.121,56,0.673,58,0.886,61,1.143,62,0.74,79,0.548,148,2.898,149,3.223,150,2.762,151,2.406,152,3.34,154,1.052,155,1.052,156,1.052,157,1.592,158,3.179,161,2.898,163,2.078,165,2.291,447,3.629,448,3.3,449,3.953,450,3.953,451,3.953]],["title/injectables/TransformInterceptor.html",[50,0.264,427,2.042]],["body/injectables/TransformInterceptor.html",[12,0.032,19,0.315,20,0.268,21,0.268,24,0.448,25,0.524,41,0.468,42,0.052,43,0.019,44,0.024,45,0.019,50,0.405,51,1.188,53,0.415,54,1.09,56,0.644,58,0.848,61,1.093,62,0.708,79,0.524,148,3.113,149,2.437,150,2.717,151,2.357,152,3.286,154,1.006,155,1.006,156,1.006,157,1.958,158,3.113,161,2.817,163,1.988,165,2.192,302,2.192,421,2.192,423,2.745,424,4.057,425,3.156,426,3.156,427,3.133,428,3.156,452,3.781]],["title/modules/TypeormModule.html",[0,0.843,14,1.665]],["body/modules/TypeormModule.html",[0,1.5,2,1.844,3,1.844,4,2.209,5,2.209,6,1.693,7,2.964,8,2.209,12,0.031,14,3.24,16,2.73,17,2.209,18,2.209,19,0.351,20,0.298,21,0.298,24,0.433,25,0.582,32,3.24,41,0.405,42,0.058,43,0.021,44,0.026,45,0.021,453,3.508,454,3.508,455,4.202,456,4.202]],["title/injectables/TypeormService.html",[32,1.665,50,0.264]],["body/injectables/TypeormService.html",[12,0.032,19,0.319,20,0.271,21,0.271,24,0.45,25,0.529,26,2.214,32,2.571,41,0.368,42,0.053,43,0.019,44,0.024,45,0.019,50,0.408,51,1.2,53,0.42,54,1.097,56,0.65,58,0.857,61,1.104,62,0.715,79,0.529,106,1.831,121,1.303,124,1.999,131,1.999,183,3.551,192,2.214,457,3.188,458,5.69,459,3.82,460,4.892,461,3.82,462,3.82,463,3.188,464,3.82,465,3.82,466,5.396,467,3.82,468,3.82,469,3.82,470,3.82,471,3.82,472,3.82,473,3.82]],["title/classes/User.html",[42,0.044,121,1.08]],["body/classes/User.html",[12,0.032,19,0.161,20,0.137,21,0.137,24,0.348,41,0.402,42,0.062,43,0.01,44,0.015,45,0.01,53,0.405,54,0.674,56,0.956,58,0.934,62,0.361,67,1.579,72,0.846,73,0.846,74,1.117,75,1.741,76,2.773,77,3.077,78,2.995,79,0.752,80,2.237,81,3.205,82,1.242,83,2.545,84,1.117,86,2.379,88,1.936,89,2.686,90,1.936,91,1.44,95,1.936,98,1.936,99,3.084,100,2.379,101,2.379,102,2.379,103,2.379,104,1.936,105,1.936,106,0.924,107,1.741,108,1.741,109,3.499,110,3.564,111,1.242,112,1.242,113,1.242,114,1.936,115,1.013,116,0.846,117,1.936,118,2.686,119,0.846,120,1.013,121,1.024,122,1.94,123,1.242,124,1.367,125,1.62,126,2.379,127,1.44,128,2.415,129,2.139,130,2.379,131,2.081,132,2.686,133,1.242,134,1.927,135,1.242,136,1.242,137,1.242,138,1.936,139,2.379,140,1.936,141,2.686,142,2.686,143,0.924,144,1.936,145,1.242,154,0.513,155,0.513,156,0.513,474,3.004,475,1.928,476,1.928,477,1.928,478,1.928,479,1.928,480,3.691,481,1.928,482,1.928,483,1.928,484,1.928,485,1.928,486,1.928,487,1.928,488,1.928,489,1.928,490,1.928,491,1.928]],["title/modules/UserModule.html",[0,0.843,15,1.836]],["body/modules/UserModule.html",[0,1.427,2,1.654,3,1.654,4,1.981,5,1.981,6,1.518,7,2.819,8,2.819,12,0.032,14,1.981,15,3.536,16,2.549,17,1.981,18,1.981,19,0.314,20,0.267,21,0.267,23,3.146,24,0.489,25,0.522,26,2.185,41,0.363,42,0.052,43,0.019,44,0.024,45,0.019,121,1.285,180,3.055,492,3.146,493,3.146,494,3.146,495,3.769,496,4.85,497,3.126,498,3.769,499,3.146,500,2.736,501,3.769]],["title/classes/UserResolver.html",[42,0.044,497,2.042]],["body/classes/UserResolver.html",[12,0.033,19,0.143,20,0.122,21,0.122,24,0.326,27,1.109,41,0.166,42,0.024,43,0.008,44,0.014,45,0.008,53,0.189,54,0.616,56,0.929,58,1.202,62,1.004,69,2.937,72,2.099,73,0.755,79,0.71,80,2.127,81,3.107,116,1.716,119,1.205,121,1.79,122,2.61,125,1.716,127,1.875,131,2.293,134,2.001,154,1.397,155,1.452,156,1.397,157,0.693,178,1.109,179,1.436,180,2.184,191,2.937,192,0.997,193,1.248,194,0.693,196,1.248,197,1.109,200,1.436,202,2.487,366,2.521,399,3.568,497,1.77,499,1.436,500,1.248,502,1.436,503,3.426,504,3.265,505,2.745,506,3.911,507,2.292,508,2.292,509,3.426,510,3.426,511,2.745,512,1.72,513,1.72,514,4.557,515,2.745,516,1.72,517,4.146,518,1.72,519,1.72,520,1.72,521,3.911,522,1.72,523,1.436,524,1.72,525,1.72,526,1.72,527,1.436,528,1.72,529,1.72,530,1.72,531,1.72,532,1.72,533,1.72,534,3.426,535,1.72,536,1.72,537,1.72,538,2.292,539,1.72,540,4.782,541,1.72,542,1.72,543,1.72,544,1.72,545,1.72,546,1.72,547,1.72,548,1.72,549,2.745,550,1.72,551,3.426,552,1.72,553,1.72,554,1.72,555,1.72,556,1.72,557,1.72,558,1.72,559,1.72,560,1.72,561,1.72,562,1.72,563,1.72,564,1.72,565,1.72]],["title/injectables/UserService.html",[50,0.264,180,1.518]],["body/injectables/UserService.html",[12,0.033,19,0.131,20,0.111,21,0.111,24,0.34,25,0.218,26,0.91,41,0.151,42,0.022,43,0.008,44,0.013,45,0.008,50,0.213,51,0.493,53,0.172,54,0.572,56,0.868,58,1.113,62,0.929,69,2.818,71,1.012,72,2.022,76,2.365,77,2.15,78,2.15,79,0.688,80,2.126,83,1.544,84,0.91,106,0.752,116,1.628,119,0.689,120,1.95,121,1.637,122,2.608,124,1.512,125,1.628,129,0.91,131,2.243,134,2.213,143,1.778,154,1.32,155,1.32,156,1.32,178,1.644,180,1.223,183,4.085,194,2.103,195,1.956,197,1.012,202,2.339,203,2.339,208,1.139,293,1.31,343,2.689,366,2.391,394,1.139,395,2.129,396,1.31,500,1.139,504,3.097,507,2.129,508,2.129,517,3.846,523,2.129,527,2.129,538,2.129,566,1.31,567,2.55,568,2.55,569,2.55,570,2.55,571,2.55,572,2.55,573,1.57,574,3.71,575,1.57,576,2.55,577,2.55,578,1.57,579,2.55,580,1.57,581,1.57,582,2.55,583,1.57,584,2.55,585,1.57,586,2.55,587,1.57,588,1.57,589,1.57,590,2.55,591,1.57,592,1.57,593,1.57,594,1.31,595,1.57,596,1.31,597,1.57,598,1.57,599,1.57,600,1.57,601,1.57,602,4.081,603,1.57,604,1.57,605,2.55,606,3.222,607,2.55,608,2.55,609,2.55,610,1.57,611,1.57,612,1.57,613,2.55,614,1.57,615,1.57,616,1.57,617,1.57,618,1.57,619,1.57,620,1.57,621,1.57,622,1.57,623,2.55,624,1.57,625,1.57,626,1.57,627,2.55,628,1.57,629,1.57,630,1.57,631,1.57]],["title/injectables/ValidationPipe.html",[50,0.264,369,2.042]],["body/injectables/ValidationPipe.html",[12,0.033,19,0.213,20,0.182,21,0.182,24,0.365,25,0.355,41,0.247,42,0.06,43,0.013,44,0.018,45,0.013,50,0.31,51,0.804,53,0.281,54,0.834,56,0.746,58,0.982,61,0.74,62,1.03,69,1.65,79,0.607,80,0.948,115,1.345,124,0.948,127,2.1,131,1.623,134,1.031,143,1.227,151,1.123,154,1.165,155,1.165,156,1.165,159,3.18,160,2.136,194,2.058,195,1.783,203,2.7,238,2.136,369,2.397,596,4.59,632,2.136,633,3.719,634,3.719,635,3.719,636,3.719,637,2.559,638,4.381,639,3.719,640,2.559,641,4.808,642,3.719,643,4.263,644,4.808,645,2.559,646,4.263,647,3.719,648,2.559,649,2.559,650,2.559,651,2.136,652,2.559,653,4.381,654,2.559,655,3.719,656,3.719,657,2.559,658,2.559,659,3.719,660,2.559,661,2.559,662,2.559,663,2.559,664,2.559,665,3.104,666,2.559,667,2.559,668,2.559,669,2.559,670,2.559,671,2.559,672,2.559,673,2.559,674,2.559,675,2.559,676,2.136,677,2.559,678,2.559]],["title/coverage.html",[679,3.137]],["body/coverage.html",[0,0.786,6,1.19,12,0.032,21,0.21,29,1.552,32,1.552,34,1.552,42,0.079,43,0.015,44,0.02,45,0.015,50,0.507,52,2.465,72,1.296,74,2.973,79,0.409,116,1.296,119,1.296,121,1.007,146,2.144,147,2.465,176,2.989,180,1.415,191,1.903,195,1.415,271,2.144,272,2.465,273,2.465,289,2.144,290,2.465,291,2.465,302,1.712,311,2.144,312,2.465,316,2.144,320,2.144,321,2.465,335,2.144,336,3.306,369,1.903,372,2.144,421,1.712,423,2.989,427,1.903,429,2.144,430,2.144,432,2.465,439,2.144,447,2.144,448,2.465,457,2.465,497,1.903,502,2.465,566,2.465,632,2.465,665,5.395,679,2.144,680,2.953,681,2.953,682,2.953,683,2.465,684,5.13,685,5.395,686,6.08,687,4.741,688,4.118,689,2.953,690,4.118,691,2.953,692,2.953,693,2.953]],["title/dependencies.html",[3,1.672,694,2.645]],["body/dependencies.html",[3,1.495,12,0.033,25,0.472,26,1.974,27,2.195,42,0.062,43,0.017,44,0.022,45,0.017,71,2.926,106,1.633,107,1.974,108,1.974,115,1.79,163,1.79,187,3.789,188,2.926,189,2.843,192,2.959,353,2.472,356,3.789,357,4.261,361,2.843,362,2.843,363,2.843,365,2.843,366,2.195,367,2.843,368,2.843,463,2.843,594,2.843,643,2.843,651,2.843,695,5.105,696,3.406,697,3.406,698,4.539,699,3.406,700,3.406,701,3.406,702,3.406,703,3.406,704,3.406,705,3.406,706,3.406,707,3.406,708,3.406,709,3.406,710,3.406,711,3.406,712,3.406,713,3.406,714,3.406,715,3.406,716,3.406,717,3.406,718,3.406,719,3.406,720,3.406,721,3.406,722,3.406,723,3.406,724,3.406,725,3.406,726,3.406,727,3.406,728,3.406,729,3.406,730,3.406,731,3.406,732,3.406]],["title/miscellaneous/functions.html",[733,1.705,734,3.18]],["body/miscellaneous/functions.html",[6,2.429,12,0.028,43,0.024,44,0.028,45,0.024,53,0.54,336,3.167,733,3.167,734,4.101,735,4.101]],["title/index.html",[53,0.291,736,2.645,737,2.645]],["body/index.html",[12,0.031,20,0.252,43,0.018,44,0.023,45,0.018,188,2.285,376,2.959,394,2.573,676,2.959,679,2.573,738,3.545,739,3.545,740,4.66,741,3.545,742,3.545,743,3.545,744,3.545,745,3.545,746,3.545,747,3.545,748,3.545,749,3.545,750,5.206,751,3.545,752,3.545,753,3.545,754,3.545,755,5.206,756,6.011,757,3.545,758,3.545,759,3.545,760,5.897,761,3.545,762,3.545,763,4.66,764,3.545,765,3.545,766,3.545,767,5.206,768,3.545,769,4.66,770,3.545,771,3.545,772,3.545,773,3.89,774,4.66,775,4.66,776,3.545,777,3.545,778,3.545,779,3.545,780,3.545,781,3.545,782,3.545,783,3.545,784,3.545,785,3.545,786,3.545,787,3.545,788,3.545,789,3.545,790,3.545,791,3.545,792,3.545,793,3.545,794,3.545,795,3.545,796,3.545]],["title/modules.html",[2,1.896]],["body/modules.html",[1,2.642,2,2,11,2.642,12,0.027,13,2.642,14,2.395,15,2.642,43,0.023,44,0.027,45,0.023,773,5.168,797,6.191,798,6.191,799,6.191]],["title/overview.html",[800,3.607]],["body/overview.html",[0,0.967,1,3.626,2,1.595,3,1.595,4,1.911,5,1.911,6,1.465,7,1.911,8,1.911,9,3.035,10,3.035,11,3.357,12,0.031,13,3.357,14,3.044,15,3.442,16,2.49,17,1.911,18,1.911,29,2.77,32,2.77,34,2.77,43,0.018,44,0.023,45,0.018,46,3.035,47,3.035,51,1.142,64,3.035,73,1.595,91,2.271,172,3.035,173,3.035,180,2.899,421,2.107,429,2.639,453,3.035,454,3.035,492,3.035,493,3.035,494,3.035,800,3.035,801,3.636,802,3.636]],["title/miscellaneous/variables.html",[400,2.765,733,1.705]],["body/miscellaneous/variables.html",[0,1.408,12,0.031,43,0.021,44,0.026,45,0.021,53,0.476,79,0.6,80,1.604,176,3.144,191,3.683,195,2.076,336,2.792,372,3.841,373,3.615,374,3.615,400,3.144,439,4.32,646,4.77,683,3.615,733,2.792,735,4.417,803,4.331,804,4.331,805,5.714,806,4.331]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"classes/CreateUserInput.html":{},"injectables/ErrorsInterceptor.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"modules/TypeormModule.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":665,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0.1.12",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["0.2.18",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":91,"title":{},"body":{"classes/CreateUserInput.html":{},"injectables/GraphqlService.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"classes/User.html":{},"overview.html":{}}}],["1.0.0",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":67,"title":{},"body":{"injectables/CacheService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlService.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["100",{"_index":389,"title":{},"body":{"classes/MyLogger.html":{}}}],["1000",{"_index":385,"title":{},"body":{"classes/MyLogger.html":{}}}],["10000",{"_index":231,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["11",{"_index":801,"title":{},"body":{"overview.html":{}}}],["14",{"_index":254,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["14.3.1",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":383,"title":{},"body":{"classes/MyLogger.html":{}}}],["1d",{"_index":625,"title":{},"body":{"injectables/UserService.html":{}}}],["2",{"_index":227,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["2.24.0",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["2.9.1",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":228,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["3.0.6",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["3.18.0",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["3.2.7",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":374,"title":{},"body":{"classes/MyLogger.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":95,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["4.0.4",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":64,"title":{},"body":{"injectables/CacheService.html":{},"overview.html":{}}}],["5.0.0",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["6.2.4",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["6.3.1",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":384,"title":{},"body":{"classes/MyLogger.html":{}}}],["7",{"_index":802,"title":{},"body":{"overview.html":{}}}],["8",{"_index":89,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["8.0.0",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":469,"title":{},"body":{"injectables/TypeormService.html":{}}}],["_id",{"_index":122,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["again",{"_index":396,"title":{},"body":{"classes/MyLogger.html":{},"injectables/UserService.html":{}}}],["already",{"_index":603,"title":{},"body":{"injectables/UserService.html":{}}}],["amazing",{"_index":781,"title":{},"body":{"index.html":{}}}],["angular",{"_index":748,"title":{},"body":{"index.html":{}}}],["apollo",{"_index":187,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["app",{"_index":376,"title":{},"body":{"classes/MyLogger.html":{},"index.html":{}}}],["app.close",{"_index":414,"title":{},"body":{"classes/MyLogger.html":{}}}],["app.listen(port",{"_index":410,"title":{},"body":{"classes/MyLogger.html":{}}}],["app.module",{"_index":354,"title":{},"body":{"classes/MyLogger.html":{}}}],["app.use",{"_index":381,"title":{},"body":{"classes/MyLogger.html":{}}}],["app.use('/voyager",{"_index":407,"title":{},"body":{"classes/MyLogger.html":{}}}],["app.use(compression",{"_index":406,"title":{},"body":{"classes/MyLogger.html":{}}}],["app.use(csurf",{"_index":380,"title":{},"body":{"classes/MyLogger.html":{}}}],["app.use(helmet",{"_index":379,"title":{},"body":{"classes/MyLogger.html":{}}}],["app.use(logger(':graphql",{"_index":405,"title":{},"body":{"classes/MyLogger.html":{}}}],["app.useglobalpipes(new",{"_index":409,"title":{},"body":{"classes/MyLogger.html":{}}}],["applications",{"_index":745,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"classes/MyLogger.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":200,"title":{},"body":{"injectables/GraphqlService.html":{},"classes/UserResolver.html":{}}}],["args('_id",{"_index":554,"title":{},"body":{"classes/UserResolver.html":{}}}],["args('input",{"_index":549,"title":{},"body":{"classes/UserResolver.html":{}}}],["args('limit",{"_index":545,"title":{},"body":{"classes/UserResolver.html":{}}}],["args('role",{"_index":562,"title":{},"body":{"classes/UserResolver.html":{}}}],["argumentmetadata",{"_index":644,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":296,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":668,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["async",{"_index":131,"title":{},"body":{"classes/CreateUserInput.html":{},"injectables/GraphqlService.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["audience",{"_index":622,"title":{},"body":{"injectables/UserService.html":{}}}],["authenticated",{"_index":205,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["author",{"_index":789,"title":{},"body":{"index.html":{}}}],["await",{"_index":134,"title":{},"body":{"classes/CreateUserInput.html":{},"injectables/GraphqlService.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["b4block",{"_index":142,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["b4register",{"_index":132,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["b4update",{"_index":141,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["backers",{"_index":782,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":648,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["bash",{"_index":755,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":108,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":145,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["bcrypt.hash(this.password",{"_index":140,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["beforeinsert",{"_index":101,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["beforeremove",{"_index":103,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["beforeupdate",{"_index":102,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["between",{"_index":90,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["blank",{"_index":86,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["block",{"_index":241,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["body",{"_index":657,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["boolean",{"_index":127,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/GraphqlModule.html":{},"classes/MyLogger.html":{},"modules/TypeormModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":799,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":797,"title":{},"body":{"modules.html":{}}}],["building",{"_index":741,"title":{},"body":{"index.html":{}}}],["cache",{"_index":71,"title":{},"body":{"injectables/CacheService.html":{},"injectables/GraphqlService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["cache.interceptor.ts",{"_index":273,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"coverage.html":{}}}],["cache.interceptor.ts:5",{"_index":278,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["cache.service",{"_index":49,"title":{},"body":{"modules/CacheModule.html":{}}}],["cacheinterceptor",{"_index":275,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["cachemodule",{"_index":11,"title":{"modules/CacheModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules.html":{},"overview.html":{}}}],["cachemodule.registerasync",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemoduleoptions",{"_index":59,"title":{},"body":{"injectables/CacheService.html":{}}}],["cacheoptionsfactory",{"_index":60,"title":{},"body":{"injectables/CacheService.html":{}}}],["cacheservice",{"_index":34,"title":{"injectables/CacheService.html":{}},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"coverage.html":{},"overview.html":{}}}],["callhandler",{"_index":152,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":433,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":437,"title":{},"body":{"guards/RolesGuard.html":{}}}],["catch",{"_index":293,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/UserService.html":{}}}],["catch(exception",{"_index":294,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":300,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catcherror",{"_index":164,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["catcherror(err",{"_index":168,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["characters",{"_index":118,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["characters'})@isnotempty",{"_index":333,"title":{},"body":{"classes/LoginUserInput.html":{}}}],["characters'})@isnotempty({message",{"_index":96,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["characters.'})@isstring()@isnotempty",{"_index":331,"title":{},"body":{"classes/LoginUserInput.html":{}}}],["characters.'})@isstring()@isnotempty({message",{"_index":92,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["class",{"_index":42,"title":{"classes/CreateUserInput.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"classes/User.html":{},"classes/UserResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"classes/CreateUserInput.html":{},"injectables/ErrorsInterceptor.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"modules/TypeormModule.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":73,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_cachemodule",{"_index":46,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_cachemodule_providers",{"_index":47,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule",{"_index":172,"title":{},"body":{"modules/GraphqlModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule_providers",{"_index":173,"title":{},"body":{"modules/GraphqlModule.html":{},"overview.html":{}}}],["cluster_typeormmodule",{"_index":453,"title":{},"body":{"modules/TypeormModule.html":{},"overview.html":{}}}],["cluster_typeormmodule_providers",{"_index":454,"title":{},"body":{"modules/TypeormModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":492,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":493,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":494,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":244,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["column",{"_index":99,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["column()@isboolean()@isnotempty",{"_index":483,"title":{},"body":{"classes/User.html":{}}}],["column()@isstring()@isnotempty",{"_index":480,"title":{},"body":{"classes/User.html":{}}}],["column()@isstring()@isnotempty()@index({unique",{"_index":478,"title":{},"body":{"classes/User.html":{}}}],["common/pipes/validation.pipe",{"_index":370,"title":{},"body":{"classes/MyLogger.html":{}}}],["compression",{"_index":368,"title":{},"body":{"classes/MyLogger.html":{},"dependencies.html":{}}}],["config/cache/cache.service",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["config/graphql/graphql.module",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["config/graphql/graphql.service",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["config/typeorm/typeorm.module",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["config/typeorm/typeorm.service",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["connected",{"_index":225,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["connection",{"_index":212,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["connection.context",{"_index":213,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["connectionparams",{"_index":222,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["consolas",{"_index":246,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["console.log('&#x1f517",{"_index":224,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["console.log('before",{"_index":324,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log(`[${context",{"_index":319,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log(`after",{"_index":328,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log(`request",{"_index":318,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log(err",{"_index":218,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["const",{"_index":194,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/MyLogger.html":{},"guards/RolesGuard.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["constructor",{"_index":178,"title":{},"body":{"injectables/GraphqlService.html":{},"guards/RolesGuard.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":196,"title":{},"body":{"injectables/GraphqlService.html":{},"guards/RolesGuard.html":{},"classes/UserResolver.html":{}}}],["constructor(reflector",{"_index":434,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(userrepository",{"_index":573,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":179,"title":{},"body":{"injectables/GraphqlService.html":{},"classes/UserResolver.html":{}}}],["context",{"_index":157,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UserResolver.html":{}}}],["context('pubsub",{"_index":550,"title":{},"body":{"classes/UserResolver.html":{}}}],["context.gethandler",{"_index":441,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":281,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"guards/RolesGuard.html":{}}}],["cors",{"_index":378,"title":{},"body":{"classes/MyLogger.html":{}}}],["coverage",{"_index":679,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":567,"title":{},"body":{"injectables/UserService.html":{}}}],["create(input",{"_index":577,"title":{},"body":{"injectables/UserService.html":{}}}],["createcacheoptions",{"_index":55,"title":{},"body":{"injectables/CacheService.html":{}}}],["created",{"_index":393,"title":{},"body":{"classes/MyLogger.html":{}}}],["createdat",{"_index":129,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createdatecolumn",{"_index":104,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["createdatecolumn({type",{"_index":476,"title":{},"body":{"classes/User.html":{}}}],["createduser",{"_index":551,"title":{},"body":{"classes/UserResolver.html":{}}}],["creategqloptions",{"_index":177,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["createtypeormoptions",{"_index":458,"title":{},"body":{"injectables/TypeormService.html":{}}}],["createuser",{"_index":503,"title":{},"body":{"classes/UserResolver.html":{}}}],["createuser(input",{"_index":513,"title":{},"body":{"classes/UserResolver.html":{}}}],["createuserinput",{"_index":72,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["csurf",{"_index":363,"title":{},"body":{"classes/MyLogger.html":{},"dependencies.html":{}}}],["ctx",{"_index":201,"title":{},"body":{"injectables/GraphqlService.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":304,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":303,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["currentuser",{"_index":202,"title":{},"body":{"injectables/GraphqlService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["currentuser.role",{"_index":207,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["dark",{"_index":261,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["data",{"_index":424,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["date().toisostring",{"_index":308,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["date.now",{"_index":326,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["debug",{"_index":220,"title":{},"body":{"injectables/GraphqlService.html":{},"classes/MyLogger.html":{}}}],["debug(message",{"_index":341,"title":{},"body":{"classes/MyLogger.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/GraphqlModule.html":{},"modules/TypeormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["declare",{"_index":375,"title":{},"body":{"classes/MyLogger.html":{}}}],["decodetoken",{"_index":627,"title":{},"body":{"injectables/UserService.html":{}}}],["decodetoken.subject",{"_index":629,"title":{},"body":{"injectables/UserService.html":{}}}],["decorators",{"_index":81,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{}}}],["default",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":56,"title":{},"body":{"injectables/CacheService.html":{},"classes/CreateUserInput.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["delete",{"_index":568,"title":{},"body":{"injectables/UserService.html":{}}}],["delete(_id",{"_index":579,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteall",{"_index":504,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["deleteuser",{"_index":505,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteuser(@args('_id",{"_index":556,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteuser(_id",{"_index":519,"title":{},"body":{"classes/UserResolver.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/GraphqlModule.html":{},"modules/TypeormModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":599,"title":{},"body":{"injectables/UserService.html":{}}}],["description",{"_index":749,"title":{},"body":{"index.html":{}}}],["destructuring",{"_index":660,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["development",{"_index":759,"title":{},"body":{"index.html":{}}}],["directiveresolvers",{"_index":198,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["documentation",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":361,"title":{},"body":{"classes/MyLogger.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":371,"title":{},"body":{"classes/MyLogger.html":{}}}],["droid",{"_index":248,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["e2e",{"_index":770,"title":{},"body":{"index.html":{}}}],["each",{"_index":387,"title":{},"body":{"classes/MyLogger.html":{}}}],["editor.cursorshape",{"_index":237,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["editor.fontfamily",{"_index":243,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["editor.fontsize",{"_index":253,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["editor.reuseheaders",{"_index":255,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["editor.theme",{"_index":260,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["efficient",{"_index":742,"title":{},"body":{"index.html":{}}}],["email",{"_index":76,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["endpointurl",{"_index":408,"title":{},"body":{"classes/MyLogger.html":{}}}],["entities",{"_index":466,"title":{},"body":{"injectables/TypeormService.html":{}}}],["entity",{"_index":98,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["entity.ts",{"_index":470,"title":{},"body":{"injectables/TypeormService.html":{}}}],["err",{"_index":217,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["err.constraints",{"_index":674,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["err.constraints[property",{"_index":675,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["error",{"_index":208,"title":{},"body":{"injectables/GraphqlService.html":{},"classes/MyLogger.html":{},"injectables/UserService.html":{}}}],["error('you",{"_index":204,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["error(message",{"_index":343,"title":{},"body":{"classes/MyLogger.html":{},"injectables/UserService.html":{}}}],["errors",{"_index":638,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":664,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errorsinterceptor",{"_index":146,"title":{"injectables/ErrorsInterceptor.html":{}},"body":{"injectables/ErrorsInterceptor.html":{},"coverage.html":{}}}],["exception",{"_index":298,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":291,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:10",{"_index":297,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":306,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":292,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["excludepaths",{"_index":286,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["excludepaths.includes(httpserver.getrequesturl",{"_index":287,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["executioncontext",{"_index":150,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/HttpCacheInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["existeduser",{"_index":605,"title":{},"body":{"injectables/UserService.html":{}}}],["expiresin",{"_index":624,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"classes/CreateUserInput.html":{},"injectables/ErrorsInterceptor.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"modules/TypeormModule.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/GraphqlModule.html":{},"modules/TypeormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":357,"title":{},"body":{"classes/MyLogger.html":{},"dependencies.html":{}}}],["expressadapter",{"_index":355,"title":{},"body":{"classes/MyLogger.html":{}}}],["extends",{"_index":274,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["failed",{"_index":656,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["false",{"_index":143,"title":{},"body":{"classes/CreateUserInput.html":{},"injectables/GraphqlService.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["file",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"classes/CreateUserInput.html":{},"injectables/ErrorsInterceptor.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"modules/TypeormModule.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["findall",{"_index":569,"title":{},"body":{"injectables/UserService.html":{}}}],["findall(offset",{"_index":582,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid",{"_index":570,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid(_id",{"_index":584,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebytoken",{"_index":571,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebytoken(token",{"_index":586,"title":{},"body":{"injectables/UserService.html":{}}}],["forin",{"_index":672,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["formaterror",{"_index":216,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["formaterrors",{"_index":633,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["formaterrors(errors",{"_index":636,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["formatresponse",{"_index":219,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["framework",{"_index":740,"title":{},"body":{"index.html":{}}}],["function",{"_index":316,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"classes/MyLogger.html":{},"coverage.html":{}}}],["functions",{"_index":734,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general.betaupdates",{"_index":263,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["getmetadataargsstorage",{"_index":462,"title":{},"body":{"injectables/TypeormService.html":{}}}],["getmetadataargsstorage().tables.map(tbl",{"_index":467,"title":{},"body":{"injectables/TypeormService.html":{}}}],["getting",{"_index":736,"title":{"index.html":{}},"body":{}}],["global",{"_index":496,"title":{},"body":{"modules/UserModule.html":{}}}],["gqlmoduleoptions",{"_index":185,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["gqloptionsfactory",{"_index":184,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["graphql",{"_index":192,"title":{},"body":{"injectables/GraphqlService.html":{},"classes/MyLogger.html":{},"injectables/TypeormService.html":{},"classes/UserResolver.html":{},"dependencies.html":{}}}],["graphql.service",{"_index":175,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["graphqlmodule",{"_index":13,"title":{"modules/GraphqlModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphqlModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlmodule.forrootasync",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlservice",{"_index":29,"title":{"injectables/GraphqlService.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":778,"title":{},"body":{"index.html":{}}}],["guard",{"_index":429,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":431,"title":{},"body":{"guards/RolesGuard.html":{}}}],["handle",{"_index":166,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["hasrole",{"_index":206,"title":{},"body":{"injectables/GraphqlService.html":{},"guards/RolesGuard.html":{}}}],["headers",{"_index":258,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["heavily",{"_index":746,"title":{},"body":{"index.html":{}}}],["hello",{"_index":506,"title":{},"body":{"classes/UserResolver.html":{}}}],["helmet",{"_index":362,"title":{},"body":{"classes/MyLogger.html":{},"dependencies.html":{}}}],["here",{"_index":786,"title":{},"body":{"index.html":{}}}],["host",{"_index":295,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":301,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["hour",{"_index":397,"title":{},"body":{"classes/MyLogger.html":{}}}],["http://chnirt.dev.io",{"_index":620,"title":{},"body":{"injectables/UserService.html":{}}}],["http://localhost:${port}/graphql",{"_index":417,"title":{},"body":{"classes/MyLogger.html":{}}}],["httpcacheinterceptor",{"_index":271,"title":{"injectables/HttpCacheInterceptor.html":{}},"body":{"injectables/HttpCacheInterceptor.html":{},"coverage.html":{}}}],["httpexception",{"_index":159,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["httpexception('new",{"_index":170,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["httpexceptionfilter",{"_index":289,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://nestjs.com",{"_index":793,"title":{},"body":{"index.html":{}}}],["httpserver",{"_index":282,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["httpserver.getrequestmethod(request",{"_index":285,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["httpserver.getrequesturl(request",{"_index":288,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["httpstatus",{"_index":160,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ValidationPipe.html":{}}}],["httpstatus.bad_gateway",{"_index":171,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["httpstatus.bad_request",{"_index":659,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["identifier",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":61,"title":{},"body":{"injectables/CacheService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GraphqlService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/MyLogger.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/TypeormService.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"classes/CreateUserInput.html":{},"injectables/ErrorsInterceptor.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"modules/TypeormModule.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["imports",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":266,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["inconsolata",{"_index":247,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["incorrect",{"_index":616,"title":{},"body":{"injectables/UserService.html":{}}}],["index",{"_index":53,"title":{"index.html":{}},"body":{"injectables/CacheService.html":{},"classes/CreateUserInput.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"classes/CreateUserInput.html":{},"injectables/ErrorsInterceptor.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"modules/TypeormModule.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["injectable",{"_index":50,"title":{"injectables/CacheService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/TypeormService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/CacheService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/TypeormService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":51,"title":{},"body":{"injectables/CacheService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/TypeormService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectrepository",{"_index":592,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(user",{"_index":595,"title":{},"body":{"injectables/UserService.html":{}}}],["input",{"_index":517,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["input.email",{"_index":612,"title":{},"body":{"injectables/UserService.html":{}}}],["input.password",{"_index":611,"title":{},"body":{"injectables/UserService.html":{}}}],["input.username",{"_index":610,"title":{},"body":{"injectables/UserService.html":{}}}],["inspired",{"_index":747,"title":{},"body":{"index.html":{}}}],["install",{"_index":757,"title":{},"body":{"index.html":{}}}],["installation",{"_index":754,"title":{},"body":{"index.html":{}}}],["installsubscriptionhandlers",{"_index":233,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["instanceof",{"_index":652,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["intercept",{"_index":148,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":149,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":421,"title":{"interfaces/Response.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":422,"title":{},"body":{"interfaces/Response.html":{}}}],["introspection",{"_index":234,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["invalid",{"_index":84,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["ip",{"_index":388,"title":{},"body":{"classes/MyLogger.html":{}}}],["isauthenticated",{"_index":199,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["isboolean",{"_index":114,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["isemail",{"_index":113,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["isemail(undefined",{"_index":82,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["isempty(value",{"_index":677,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["isgetrequest",{"_index":284,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["isnotempty",{"_index":110,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["isstring",{"_index":109,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["isstring()@minlength(4",{"_index":94,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginUserInput.html":{}}}],["issuer",{"_index":619,"title":{},"body":{"injectables/UserService.html":{}}}],["item",{"_index":445,"title":{},"body":{"guards/RolesGuard.html":{}}}],["items",{"_index":70,"title":{},"body":{"injectables/CacheService.html":{}}}],["join",{"_index":676,"title":{},"body":{"injectables/ValidationPipe.html":{},"index.html":{}}}],["json.stringify(variables",{"_index":404,"title":{},"body":{"classes/MyLogger.html":{}}}],["jsonwebtoken",{"_index":594,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["jwt",{"_index":593,"title":{},"body":{"injectables/UserService.html":{}}}],["jwt.sign",{"_index":618,"title":{},"body":{"injectables/UserService.html":{}}}],["jwt.verify(token",{"_index":628,"title":{},"body":{"injectables/UserService.html":{}}}],["kamil",{"_index":790,"title":{},"body":{"index.html":{}}}],["last",{"_index":259,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/GraphqlModule.html":{},"modules/TypeormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":111,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["length(1",{"_index":88,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["license",{"_index":796,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":775,"title":{},"body":{"index.html":{}}}],["light",{"_index":262,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["limit",{"_index":366,"title":{},"body":{"classes/MyLogger.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["line",{"_index":238,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/ValidationPipe.html":{}}}],["log",{"_index":338,"title":{},"body":{"classes/MyLogger.html":{}}}],["log(message",{"_index":346,"title":{},"body":{"classes/MyLogger.html":{}}}],["logger",{"_index":358,"title":{},"body":{"classes/MyLogger.html":{}}}],["logger.log",{"_index":418,"title":{},"body":{"classes/MyLogger.html":{}}}],["logger.log(`&#x1f680",{"_index":415,"title":{},"body":{"classes/MyLogger.html":{}}}],["logger.token('graphql",{"_index":398,"title":{},"body":{"classes/MyLogger.html":{}}}],["loggermiddleware",{"_index":311,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["loggerservice",{"_index":337,"title":{},"body":{"classes/MyLogger.html":{}}}],["logging",{"_index":473,"title":{},"body":{"injectables/TypeormService.html":{}}}],["logginginterceptor",{"_index":320,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["login",{"_index":507,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["login(@args('input",{"_index":559,"title":{},"body":{"classes/UserResolver.html":{}}}],["login(input",{"_index":523,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["loginresponse",{"_index":119,"title":{"classes/LoginResponse.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["loginuserinput",{"_index":116,"title":{"classes/LoginUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["manager",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["many",{"_index":392,"title":{},"body":{"classes/MyLogger.html":{}}}],["map",{"_index":426,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map(err",{"_index":670,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["matchespassword",{"_index":474,"title":{},"body":{"classes/User.html":{}}}],["matchespassword(password",{"_index":144,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["matching",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"classes/CreateUserInput.html":{},"injectables/ErrorsInterceptor.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"modules/TypeormModule.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":66,"title":{},"body":{"injectables/CacheService.html":{},"classes/MyLogger.html":{}}}],["maximum",{"_index":68,"title":{},"body":{"injectables/CacheService.html":{}}}],["me(@context('currentuser",{"_index":543,"title":{},"body":{"classes/UserResolver.html":{}}}],["me(currentuser",{"_index":525,"title":{},"body":{"classes/UserResolver.html":{}}}],["member",{"_index":137,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["memcached",{"_index":189,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["memcachedcache",{"_index":186,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["message",{"_index":83,"title":{},"body":{"classes/CreateUserInput.html":{},"injectables/ErrorsInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["message'})@isnotempty({message",{"_index":85,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["metadata",{"_index":643,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["metatype",{"_index":641,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["methods",{"_index":54,"title":{},"body":{"injectables/CacheService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/MyLogger.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["minlength",{"_index":112,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["minlength(4",{"_index":117,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["minutes",{"_index":386,"title":{},"body":{"classes/MyLogger.html":{}}}],["miscellaneous",{"_index":733,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":774,"title":{},"body":{"index.html":{}}}],["mode",{"_index":763,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/GraphqlModule.html":{},"modules/TypeormModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/GraphqlModule.html":{},"classes/MyLogger.html":{},"modules/TypeormModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["module.hot",{"_index":411,"title":{},"body":{"classes/MyLogger.html":{}}}],["module.hot.accept",{"_index":412,"title":{},"body":{"classes/MyLogger.html":{}}}],["module.hot.dispose",{"_index":413,"title":{},"body":{"classes/MyLogger.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/GraphqlModule.html":{},"modules/TypeormModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/user/user.module",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.service",{"_index":190,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["moment",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["monaco",{"_index":251,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["mongodb",{"_index":463,"title":{},"body":{"injectables/TypeormService.html":{},"dependencies.html":{}}}],["mongodb://chnirt:chin04071803@ds055690.mlab.com:55690/nest",{"_index":465,"title":{},"body":{"injectables/TypeormService.html":{}}}],["mongorepository",{"_index":574,"title":{},"body":{"injectables/UserService.html":{}}}],["mono",{"_index":250,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["monospace",{"_index":252,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["more",{"_index":785,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":367,"title":{},"body":{"classes/MyLogger.html":{},"dependencies.html":{}}}],["mutation",{"_index":540,"title":{},"body":{"classes/UserResolver.html":{}}}],["mutation(undefined",{"_index":514,"title":{},"body":{"classes/UserResolver.html":{}}}],["mylogger",{"_index":335,"title":{"classes/MyLogger.html":{}},"body":{"classes/MyLogger.html":{},"coverage.html":{}}}],["myśliwiec",{"_index":791,"title":{},"body":{"index.html":{}}}],["n",{"_index":403,"title":{},"body":{"classes/MyLogger.html":{}}}],["name",{"_index":155,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/MyLogger.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["nest",{"_index":750,"title":{},"body":{"index.html":{}}}],["nestfactory",{"_index":352,"title":{},"body":{"classes/MyLogger.html":{}}}],["nestfactory.create(appmodule",{"_index":377,"title":{},"body":{"classes/MyLogger.html":{}}}],["nestframework",{"_index":795,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":161,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"injectables/ErrorsInterceptor.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/MyLogger.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"modules/TypeormModule.html":{},"injectables/TypeormService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":353,"title":{},"body":{"classes/MyLogger.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"injectables/GraphqlService.html":{},"classes/UserResolver.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":356,"title":{},"body":{"classes/MyLogger.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"injectables/TypeormService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":317,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["new",{"_index":195,"title":{},"body":{"injectables/GraphqlService.html":{},"classes/HttpExceptionFilter.html":{},"classes/MyLogger.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":151,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/GraphqlService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{}}}],["next.handle().pipe(map(data",{"_index":428,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe(timeout(5000",{"_index":451,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["node.js",{"_index":739,"title":{},"body":{"index.html":{}}}],["now",{"_index":325,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now}ms",{"_index":329,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["npm",{"_index":756,"title":{},"body":{"index.html":{}}}],["number",{"_index":69,"title":{},"body":{"injectables/CacheService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["object",{"_index":653,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["object.keys(value).length",{"_index":678,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["objectidcolumn",{"_index":100,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["observable",{"_index":158,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["offset",{"_index":538,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["omit",{"_index":267,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["onconnect",{"_index":221,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["open",{"_index":776,"title":{},"body":{"index.html":{}}}],["operationname",{"_index":401,"title":{},"body":{"classes/MyLogger.html":{}}}],["optional",{"_index":156,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/MyLogger.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["options",{"_index":232,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["order",{"_index":598,"title":{},"body":{"injectables/UserService.html":{}}}],["origin",{"_index":269,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["out",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/GraphqlModule.html":{},"modules/TypeormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":800,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":694,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":154,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/MyLogger.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["password",{"_index":77,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["path",{"_index":309,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["per",{"_index":391,"title":{},"body":{"classes/MyLogger.html":{}}}],["persistedqueries",{"_index":226,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["pipe",{"_index":167,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["pipe(tap",{"_index":327,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["pipetransform",{"_index":647,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":650,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":662,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["playground",{"_index":235,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["please",{"_index":394,"title":{},"body":{"classes/MyLogger.html":{},"injectables/UserService.html":{},"index.html":{}}}],["pm2",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["port",{"_index":372,"title":{},"body":{"classes/MyLogger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":239,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["private",{"_index":596,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["pro",{"_index":245,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["process.env.port",{"_index":373,"title":{},"body":{"classes/MyLogger.html":{},"miscellaneous/variables.html":{}}}],["process.env.secret_key",{"_index":623,"title":{},"body":{"injectables/UserService.html":{}}}],["production",{"_index":765,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":738,"title":{},"body":{"index.html":{}}}],["project",{"_index":777,"title":{},"body":{"index.html":{}}}],["promise",{"_index":183,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/TypeormService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":75,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"interfaces/Response.html":{},"classes/User.html":{}}}],["property",{"_index":673,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["provided",{"_index":626,"title":{},"body":{"injectables/UserService.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/GraphqlModule.html":{},"modules/TypeormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["pubsub",{"_index":191,"title":{},"body":{"injectables/GraphqlService.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pubsub.asynciterator('usercreated",{"_index":565,"title":{},"body":{"classes/UserResolver.html":{}}}],["pubsub.publish('usercreated",{"_index":553,"title":{},"body":{"classes/UserResolver.html":{}}}],["query",{"_index":399,"title":{},"body":{"classes/MyLogger.html":{},"classes/UserResolver.html":{}}}],["query(undefined",{"_index":521,"title":{},"body":{"classes/UserResolver.html":{}}}],["queryplan.hidequeryplanresponse",{"_index":264,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["rate",{"_index":365,"title":{},"body":{"classes/MyLogger.html":{},"dependencies.html":{}}}],["ratelimit",{"_index":364,"title":{},"body":{"classes/MyLogger.html":{}}}],["rc.27",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":784,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":197,"title":{},"body":{"injectables/GraphqlService.html":{},"guards/RolesGuard.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["ready",{"_index":416,"title":{},"body":{"classes/MyLogger.html":{}}}],["reflect",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":435,"title":{},"body":{"guards/RolesGuard.html":{}}}],["register",{"_index":515,"title":{},"body":{"classes/UserResolver.html":{}}}],["repository",{"_index":753,"title":{},"body":{"index.html":{}}}],["req",{"_index":210,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/LoggerMiddleware.html":{},"classes/MyLogger.html":{}}}],["req.body",{"_index":402,"title":{},"body":{"classes/MyLogger.html":{}}}],["req.headers",{"_index":214,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["request",{"_index":280,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"classes/MyLogger.html":{},"guards/RolesGuard.html":{}}}],["request.applicationref",{"_index":283,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["request.credentials",{"_index":265,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["request.url",{"_index":310,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.user",{"_index":442,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requests",{"_index":390,"title":{},"body":{"classes/MyLogger.html":{}}}],["res",{"_index":211,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/LoggerMiddleware.html":{}}}],["reset",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/GraphqlModule.html":{},"modules/TypeormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolver",{"_index":539,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolver('user",{"_index":541,"title":{},"body":{"classes/UserResolver.html":{}}}],["response",{"_index":302,"title":{"interfaces/Response.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.status(statuscode).json",{"_index":307,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["result",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"classes/CreateUserInput.html":{},"injectables/ErrorsInterceptor.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"modules/TypeormModule.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"classes/CreateUserInput.html":{},"injectables/ErrorsInterceptor.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"modules/TypeormModule.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retries",{"_index":229,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["retry",{"_index":230,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["return",{"_index":62,"title":{},"body":{"injectables/CacheService.html":{},"classes/CreateUserInput.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["returns",{"_index":58,"title":{},"body":{"injectables/CacheService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/MyLogger.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["reuses",{"_index":257,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["rimraf",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":125,"title":{},"body":{"classes/CreateUserInput.html":{},"injectables/GraphqlService.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["roles",{"_index":439,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles.find(item",{"_index":444,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":430,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["run",{"_index":760,"title":{},"body":{"index.html":{}}}],["running",{"_index":758,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":163,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":165,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["same",{"_index":268,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["sans",{"_index":249,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["scalable",{"_index":743,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":65,"title":{},"body":{"injectables/CacheService.html":{}}}],["server",{"_index":188,"title":{},"body":{"injectables/GraphqlService.html":{},"classes/MyLogger.html":{},"dependencies.html":{},"index.html":{}}}],["set",{"_index":631,"title":{},"body":{"injectables/UserService.html":{}}}],["setmetadata('roles",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setrole",{"_index":508,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["setrole(@args('_id",{"_index":561,"title":{},"body":{"classes/UserResolver.html":{}}}],["setrole(_id",{"_index":527,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["settings",{"_index":236,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["side",{"_index":744,"title":{},"body":{"index.html":{}}}],["skip",{"_index":600,"title":{},"body":{"injectables/UserService.html":{}}}],["socket.io",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"classes/CreateUserInput.html":{},"injectables/ErrorsInterceptor.html":{},"modules/GraphqlModule.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"modules/TypeormModule.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"index.html":{}}}],["sponsors",{"_index":780,"title":{},"body":{"index.html":{}}}],["src/.../graphql.service.ts",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":735,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/decorators/roles.decorator.ts",{"_index":683,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/filters/http",{"_index":290,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/common/guards/roles.guard.ts",{"_index":432,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/common/guards/roles.guard.ts:5",{"_index":436,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/roles.guard.ts:8",{"_index":438,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/interceptors/exception.interceptor.ts",{"_index":147,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/exception.interceptor.ts:14",{"_index":153,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["src/common/interceptors/http",{"_index":272,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/logging.interceptor.ts",{"_index":321,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/logging.interceptor.ts:12",{"_index":322,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/common/interceptors/timeout.interceptor.ts",{"_index":448,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/timeout.interceptor.ts:12",{"_index":449,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/common/interceptors/transform.interceptor.ts",{"_index":423,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/transform.interceptor.ts:17",{"_index":452,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/common/middleware/logger.middleware.ts",{"_index":312,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/common/middleware/logger.middleware.ts:5",{"_index":315,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/common/pipes/validation.pipe.ts",{"_index":632,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/common/pipes/validation.pipe.ts:14",{"_index":645,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/common/pipes/validation.pipe.ts:37",{"_index":640,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/common/pipes/validation.pipe.ts:42",{"_index":637,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/config/cache/cache.module.ts",{"_index":48,"title":{},"body":{"modules/CacheModule.html":{}}}],["src/config/cache/cache.service.ts",{"_index":52,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{}}}],["src/config/cache/cache.service.ts:9",{"_index":57,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/config/graphql/graphql.module.ts",{"_index":174,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["src/config/graphql/graphql.service.ts",{"_index":176,"title":{},"body":{"injectables/GraphqlService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/graphql/graphql.service.ts:10",{"_index":181,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["src/config/graphql/graphql.service.ts:13",{"_index":182,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["src/config/typeorm/typeorm.module.ts",{"_index":455,"title":{},"body":{"modules/TypeormModule.html":{}}}],["src/config/typeorm/typeorm.service.ts",{"_index":457,"title":{},"body":{"injectables/TypeormService.html":{},"coverage.html":{}}}],["src/config/typeorm/typeorm.service.ts:7",{"_index":459,"title":{},"body":{"injectables/TypeormService.html":{}}}],["src/main.ts",{"_index":336,"title":{},"body":{"classes/MyLogger.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts:18",{"_index":347,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/main.ts:19",{"_index":345,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/main.ts:20",{"_index":351,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/main.ts:21",{"_index":342,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/main.ts:22",{"_index":349,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/modules/user/user.entity.ts",{"_index":74,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"coverage.html":{}}}],["src/modules/user/user.entity.ts:101",{"_index":477,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:104",{"_index":486,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:107",{"_index":489,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:115",{"_index":490,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:120",{"_index":488,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:124",{"_index":491,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:35",{"_index":334,"title":{},"body":{"classes/LoginUserInput.html":{}}}],["src/modules/user/user.entity.ts:41",{"_index":332,"title":{},"body":{"classes/LoginUserInput.html":{}}}],["src/modules/user/user.entity.ts:50",{"_index":97,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["src/modules/user/user.entity.ts:57",{"_index":93,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["src/modules/user/user.entity.ts:61",{"_index":87,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["src/modules/user/user.entity.ts:66",{"_index":330,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/modules/user/user.entity.ts:72",{"_index":475,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:77",{"_index":487,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:82",{"_index":481,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:88",{"_index":479,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:93",{"_index":482,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:98",{"_index":484,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.module.ts",{"_index":495,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.resolver.ts",{"_index":502,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["src/modules/user/user.resolver.ts:19",{"_index":512,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/modules/user/user.resolver.ts:23",{"_index":522,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/modules/user/user.resolver.ts:28",{"_index":526,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/modules/user/user.resolver.ts:33",{"_index":537,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/modules/user/user.resolver.ts:38",{"_index":532,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/modules/user/user.resolver.ts:43",{"_index":516,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/modules/user/user.resolver.ts:53",{"_index":530,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/modules/user/user.resolver.ts:61",{"_index":520,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/modules/user/user.resolver.ts:66",{"_index":518,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/modules/user/user.resolver.ts:71",{"_index":524,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/modules/user/user.resolver.ts:76",{"_index":528,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/modules/user/user.resolver.ts:81",{"_index":535,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/modules/user/user.service.ts",{"_index":566,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:111",{"_index":589,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:13",{"_index":575,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:19",{"_index":583,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:28",{"_index":585,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:32",{"_index":578,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:49",{"_index":591,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:57",{"_index":580,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:63",{"_index":581,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:67",{"_index":588,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:92",{"_index":587,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":761,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":764,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":766,"title":{},"body":{"index.html":{}}}],["started",{"_index":737,"title":{"index.html":{}},"body":{}}],["starter",{"_index":752,"title":{},"body":{"index.html":{}}}],["statements",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":126,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["statuscode",{"_index":305,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stay",{"_index":787,"title":{},"body":{"index.html":{}}}],["string",{"_index":80,"title":{},"body":{"classes/CreateUserInput.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":621,"title":{},"body":{"injectables/UserService.html":{}}}],["submitted",{"_index":658,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["subscription",{"_index":534,"title":{},"body":{"classes/UserResolver.html":{}}}],["subscriptions",{"_index":193,"title":{},"body":{"injectables/GraphqlService.html":{},"classes/MyLogger.html":{},"classes/UserResolver.html":{}}}],["support",{"_index":773,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":798,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":471,"title":{},"body":{"injectables/TypeormService.html":{}}}],["t",{"_index":425,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["tab",{"_index":256,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["table",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":601,"title":{},"body":{"injectables/UserService.html":{}}}],["taken",{"_index":604,"title":{},"body":{"injectables/UserService.html":{}}}],["tap",{"_index":323,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["tbl.target",{"_index":468,"title":{},"body":{"injectables/TypeormService.html":{}}}],["test",{"_index":767,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":772,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":771,"title":{},"body":{"index.html":{}}}],["tests",{"_index":769,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":779,"title":{},"body":{"index.html":{}}}],["this._id",{"_index":133,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["this.formaterrors(errors",{"_index":666,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.isempty(value",{"_index":654,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.password",{"_index":139,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["this.reflector.get('roles",{"_index":440,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.role",{"_index":136,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["this.status",{"_index":138,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["this.tovalidate(metatype",{"_index":661,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.userrepository.deletemany",{"_index":615,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":597,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":602,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.remove(user",{"_index":614,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":609,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.updateone",{"_index":630,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(input",{"_index":552,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.delete(_id",{"_index":557,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.deleteall",{"_index":558,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.findall(offset",{"_index":546,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.findbyid(_id",{"_index":548,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.findonebytoken(token",{"_index":215,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.userservice.login(input",{"_index":560,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.setrole(_id",{"_index":563,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.update(_id",{"_index":555,"title":{},"body":{"classes/UserResolver.html":{}}}],["throw",{"_index":203,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["throwerror",{"_index":162,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["throwerror(new",{"_index":169,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["timeout",{"_index":450,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":447,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timestamp",{"_index":128,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["token",{"_index":120,"title":{},"body":{"classes/CreateUserInput.html":{},"injectables/GraphqlService.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["tools",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["touch",{"_index":788,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":634,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":639,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["trace",{"_index":344,"title":{},"body":{"classes/MyLogger.html":{}}}],["tracing.hidetracingresponse",{"_index":270,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["trackby",{"_index":276,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["trackby(context",{"_index":277,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["transform",{"_index":635,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":642,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":651,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":427,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":124,"title":{},"body":{"classes/CreateUserInput.html":{},"injectables/GraphqlService.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"guards/RolesGuard.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["try",{"_index":395,"title":{},"body":{"classes/MyLogger.html":{},"injectables/UserService.html":{}}}],["tslint:disable",{"_index":671,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["ttl",{"_index":63,"title":{},"body":{"injectables/CacheService.html":{}}}],["twitter",{"_index":794,"title":{},"body":{"index.html":{}}}],["type",{"_index":79,"title":{},"body":{"classes/CreateUserInput.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GraphqlService.html":{},"injectables/HttpCacheInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/MyLogger.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":106,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeorm.service",{"_index":456,"title":{},"body":{"modules/TypeormModule.html":{}}}],["typeormmodule",{"_index":14,"title":{"modules/TypeormModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TypeormModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["typeormmodule.forfeature([user",{"_index":501,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":461,"title":{},"body":{"injectables/TypeormService.html":{}}}],["typeormoptionsfactory",{"_index":460,"title":{},"body":{"injectables/TypeormService.html":{}}}],["typeormservice",{"_index":32,"title":{"injectables/TypeormService.html":{}},"body":{"modules/AppModule.html":{},"modules/TypeormModule.html":{},"injectables/TypeormService.html":{},"coverage.html":{},"overview.html":{}}}],["typepaths",{"_index":209,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["types",{"_index":667,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.find(type",{"_index":669,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["typescript",{"_index":751,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":279,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["underline",{"_index":242,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["unique",{"_index":123,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["unit",{"_index":768,"title":{},"body":{"index.html":{}}}],["update",{"_index":572,"title":{},"body":{"injectables/UserService.html":{}}}],["update(_id",{"_index":590,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedat",{"_index":130,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["updatedatecolumn",{"_index":105,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["updatedatecolumn({type",{"_index":485,"title":{},"body":{"classes/User.html":{}}}],["updateuser",{"_index":509,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateuser(_id",{"_index":529,"title":{},"body":{"classes/UserResolver.html":{}}}],["url",{"_index":464,"title":{},"body":{"injectables/TypeormService.html":{}}}],["use",{"_index":313,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":314,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useclass",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["usenewurlparser",{"_index":472,"title":{},"body":{"injectables/TypeormService.html":{}}}],["user",{"_index":121,"title":{"classes/User.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"guards/RolesGuard.html":{},"injectables/TypeormService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user(@args('_id",{"_index":547,"title":{},"body":{"classes/UserResolver.html":{}}}],["user(_id",{"_index":531,"title":{},"body":{"classes/UserResolver.html":{}}}],["user._id",{"_index":613,"title":{},"body":{"injectables/UserService.html":{}}}],["user.email",{"_index":608,"title":{},"body":{"injectables/UserService.html":{}}}],["user.entity",{"_index":500,"title":{},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["user.matchespassword(password",{"_index":617,"title":{},"body":{"injectables/UserService.html":{}}}],["user.password",{"_index":607,"title":{},"body":{"injectables/UserService.html":{}}}],["user.resolver",{"_index":498,"title":{},"body":{"modules/UserModule.html":{}}}],["user.roles",{"_index":446,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.roles.some(role",{"_index":443,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.service",{"_index":499,"title":{},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{}}}],["user.username",{"_index":606,"title":{},"body":{"injectables/UserService.html":{}}}],["usercreated",{"_index":510,"title":{},"body":{"classes/UserResolver.html":{}}}],["usercreated(@context('pubsub",{"_index":564,"title":{},"body":{"classes/UserResolver.html":{}}}],["usercreated(pubsub",{"_index":533,"title":{},"body":{"classes/UserResolver.html":{}}}],["usermodule",{"_index":15,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":78,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["userrepository",{"_index":576,"title":{},"body":{"injectables/UserService.html":{}}}],["userresolver",{"_index":497,"title":{"classes/UserResolver.html":{}},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["users",{"_index":511,"title":{},"body":{"classes/UserResolver.html":{}}}],["users(@args('offset",{"_index":544,"title":{},"body":{"classes/UserResolver.html":{}}}],["users(offset",{"_index":536,"title":{},"body":{"classes/UserResolver.html":{}}}],["userservice",{"_index":180,"title":{"injectables/UserService.html":{}},"body":{"injectables/GraphqlService.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uuid",{"_index":107,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"dependencies.html":{}}}],["uuid.v1",{"_index":135,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{}}}],["validate",{"_index":649,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":663,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validation",{"_index":655,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validationpipe",{"_index":369,"title":{"injectables/ValidationPipe.html":{}},"body":{"classes/MyLogger.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":115,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginResponse.html":{},"classes/LoginUserInput.html":{},"classes/User.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":646,"title":{},"body":{"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":240,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["variable",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":400,"title":{"miscellaneous/variables.html":{}},"body":{"classes/MyLogger.html":{},"miscellaneous/variables.html":{}}}],["verbose",{"_index":339,"title":{},"body":{"classes/MyLogger.html":{}}}],["verbose(message",{"_index":348,"title":{},"body":{"classes/MyLogger.html":{}}}],["void",{"_index":299,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"classes/MyLogger.html":{}}}],["voyager",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["voyager/middleware",{"_index":360,"title":{},"body":{"classes/MyLogger.html":{}}}],["voyagermiddleware",{"_index":359,"title":{},"body":{"classes/MyLogger.html":{}}}],["warn",{"_index":340,"title":{},"body":{"classes/MyLogger.html":{}}}],["warn(message",{"_index":350,"title":{},"body":{"classes/MyLogger.html":{}}}],["watch",{"_index":762,"title":{},"body":{"index.html":{}}}],["website",{"_index":792,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":223,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["windowms",{"_index":382,"title":{},"body":{"classes/MyLogger.html":{}}}],["world",{"_index":542,"title":{},"body":{"classes/UserResolver.html":{}}}],["ws://localhost:${port}/graphql",{"_index":420,"title":{},"body":{"classes/MyLogger.html":{}}}],["x1f680",{"_index":419,"title":{},"body":{"classes/MyLogger.html":{}}}],["you'd",{"_index":783,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/GraphqlModule.html":{},"modules/TypeormModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCacheModule\n\nCacheModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCacheModule->AppModule\n\n\n\n\n\nGraphqlModule\n\nGraphqlModule\n\nAppModule -->\n\nGraphqlModule->AppModule\n\n\n\n\n\nTypeormModule\n\nTypeormModule\n\nAppModule -->\n\nTypeormModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CacheModule\n                        \n                        \n                            GraphqlModule\n                        \n                        \n                            TypeormModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, CacheModule } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { GraphqlModule } from './config/graphql/graphql.module'\nimport { GraphqlService } from './config/graphql/graphql.service'\nimport { TypeormModule } from './config/typeorm/typeorm.module'\nimport { TypeormService } from './config/typeorm/typeorm.service'\nimport { CacheService } from './config/cache/cache.service'\nimport { UserModule } from './modules/user/user.module'\n\n@Module({\n\timports: [\n\t\tGraphQLModule.forRootAsync({\n\t\t\tuseClass: GraphqlService\n\t\t}),\n\t\tTypeOrmModule.forRootAsync({\n\t\t\tuseClass: TypeormService\n\t\t}),\n\t\tCacheModule.registerAsync({\n\t\t\tuseClass: CacheService\n\t\t}),\n\t\tUserModule,\n\t\tGraphqlModule,\n\t\tTypeormModule\n\t]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CacheModule.html":{"url":"modules/CacheModule.html","title":"module - CacheModule","body":"\n                   \n\n\n\n\n    Modules\n    CacheModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_providers\n\n\n\n\nCacheService\n\nCacheService\n\n\n\nCacheModule\n\nCacheModule\n\nCacheModule -->\n\nCacheService->CacheModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/cache/cache.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CacheService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CacheService } from './cache.service';\n\n@Module({\n  providers: [CacheService]\n})\nexport class CacheModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/cache/cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCacheOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCacheOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCacheOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/cache/cache.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     CacheModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  CacheOptionsFactory,\n  CacheModuleOptions,\n} from '@nestjs/common';\n\n@Injectable()\nexport class CacheService implements CacheOptionsFactory {\n  createCacheOptions(): CacheModuleOptions {\n    return {\n      ttl: 5, // seconds\n      max: 10, // maximum number of items in cache\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail(undefined, {message: 'Invalid email message'})@IsNotEmpty({message: 'Your email can not be blank.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Length(1, 8, {message: 'Your password must be between 1 and 8 characters.'})@IsString()@IsNotEmpty({message: 'Your password can not be blank.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@MinLength(4, {message: 'Your username must be at least 4 characters'})@IsNotEmpty({message: 'Your username can not be blank.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n\tEntity,\n\tColumn,\n\tObjectIdColumn,\n\tBeforeInsert,\n\tBeforeUpdate,\n\tBeforeRemove,\n\tCreateDateColumn,\n\tUpdateDateColumn,\n\tIndex\n} from 'typeorm'\nimport * as uuid from 'uuid'\nimport * as bcrypt from 'bcrypt'\nimport {\n\tIsString,\n\tIsNotEmpty,\n\tLength,\n\tMinLength,\n\tIsEmail,\n\tIsBoolean\n} from 'class-validator'\n\nexport class LoginUserInput {\n\t@IsString()\n\t@MinLength(4, {\n\t\tmessage: 'Your username must be at least 4 characters'\n\t})\n\t@IsNotEmpty()\n\tusername: string\n\t@Length(1, 8, {\n\t\tmessage: 'Your password must be between 1 and 8 characters.'\n\t})\n\t@IsString()\n\t@IsNotEmpty()\n\tpassword: string\n}\n\nexport class CreateUserInput {\n\t@IsString()\n\t@MinLength(4, {\n\t\tmessage: 'Your username must be at least 4 characters'\n\t})\n\t@IsNotEmpty({ message: 'Your username can not be blank.' })\n\tusername: string\n\n\t@Length(1, 8, {\n\t\tmessage: 'Your password must be between 1 and 8 characters.'\n\t})\n\t@IsString()\n\t@IsNotEmpty({ message: 'Your password can not be blank.' })\n\tpassword: string\n\n\t@IsEmail(undefined, { message: 'Invalid email message' })\n\t@IsNotEmpty({ message: 'Your email can not be blank.' })\n\temail: string\n}\n\nexport class LoginResponse {\n\t@IsString()\n\ttoken: string\n}\n\n@Entity()\nexport class User {\n\t@ObjectIdColumn()\n\t_id: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\tusername: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\tpassword: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\t@Index({ unique: true })\n\temail: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\trole: string\n\n\t@Column()\n\t@IsBoolean()\n\t@IsNotEmpty()\n\tstatus: boolean\n\n\t@CreateDateColumn({ type: 'timestamp' })\n\tcreatedAt: string\n\n\t@UpdateDateColumn({ type: 'timestamp' })\n\tupdatedAt: string\n\n\t@BeforeInsert()\n\tasync b4register() {\n\t\tthis._id = await uuid.v1()\n\t\tthis.role = await 'MEMBER'\n\t\tthis.status = await true\n\t\tthis.password = await bcrypt.hash(this.password, 10)\n\t}\n\n\t@BeforeUpdate()\n\tasync b4update() {\n\t\tthis.password = await bcrypt.hash(this.password, 10)\n\t}\n\n\t@BeforeRemove()\n\tasync b4block() {\n\t\tthis.status = false\n\t}\n\n\tasync matchesPassword(password) {\n\t\treturn await bcrypt.compare(password, this.password)\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorsInterceptor.html":{"url":"injectables/ErrorsInterceptor.html","title":"injectable - ErrorsInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorsInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/exception.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/exception.interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorsInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next\n      .handle()\n      .pipe(\n        catchError(err =>\n          throwError(new HttpException('New message', HttpStatus.BAD_GATEWAY)),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphqlModule.html":{"url":"modules/GraphqlModule.html","title":"module - GraphqlModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphqlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GraphqlModule\n\n\n\ncluster_GraphqlModule_providers\n\n\n\n\nGraphqlService\n\nGraphqlService\n\n\n\nGraphqlModule\n\nGraphqlModule\n\nGraphqlModule -->\n\nGraphqlService->GraphqlModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/graphql/graphql.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphqlService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { GraphqlService } from './graphql.service'\n\n@Module({\n\tproviders: [GraphqlService]\n})\nexport class GraphqlModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlService.html":{"url":"injectables/GraphqlService.html","title":"injectable - GraphqlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/graphql/graphql.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGqlOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/config/graphql/graphql.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGqlOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGqlOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/graphql/graphql.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { GqlOptionsFactory, GqlModuleOptions } from '@nestjs/graphql'\nimport { MemcachedCache } from 'apollo-server-cache-memcached'\nimport { UserService } from '../../modules/user/user.service'\nimport { PubSub } from 'graphql-subscriptions'\n\nconst pubSub = new PubSub()\n\n@Injectable()\nexport class GraphqlService implements GqlOptionsFactory {\n\tconstructor(private readonly userService: UserService) {}\n\n\tasync createGqlOptions(): Promise {\n\t\tconst directiveResolvers = {\n\t\t\tisAuthenticated: (next, source, args, ctx) => {\n\t\t\t\tconst { currentUser } = ctx\n\n\t\t\t\tif (!currentUser) {\n\t\t\t\t\tthrow new Error('You are not authenticated!')\n\t\t\t\t}\n\n\t\t\t\treturn next()\n\t\t\t},\n\t\t\thasRole: (next, source, args, ctx) => {\n\t\t\t\tconst { role } = args\n\t\t\t\tconst { currentUser } = ctx\n\n\t\t\t\tif (!currentUser) {\n\t\t\t\t\tthrow new Error('You are not authenticated!')\n\t\t\t\t}\n\n\t\t\t\tif (role !== currentUser.role) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Must have role: ${role}, you have role: ${currentUser.role}`\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\treturn next()\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttypePaths: ['./**/*.graphql'],\n\t\t\tdirectiveResolvers,\n\t\t\tcontext: async ({ req, res, connection }) => {\n\t\t\t\tif (connection) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\treq: connection.context,\n\t\t\t\t\t\tpubSub\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet currentUser = ''\n\n\t\t\t\tconst { token } = req.headers\n\n\t\t\t\tif (token) {\n\t\t\t\t\tcurrentUser = await this.userService.findOneByToken(token)\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\treq,\n\t\t\t\t\tres,\n\t\t\t\t\tpubSub,\n\t\t\t\t\tcurrentUser\n\t\t\t\t}\n\t\t\t},\n\t\t\tformatError: err => {\n\t\t\t\t// console.log(err)\n\t\t\t\treturn err\n\t\t\t},\n\t\t\tformatResponse: err => {\n\t\t\t\t// console.log(err)\n\t\t\t\treturn err\n\t\t\t},\n\t\t\tdebug: false,\n\t\t\tsubscriptions: {\n\t\t\t\tonConnect: (connectionParams, webSocket, context) => {\n\t\t\t\t\tconsole.log('&#x1F517; Connected to websocket')\n\t\t\t\t}\n\t\t\t},\n\t\t\tpersistedQueries: {\n\t\t\t\tcache: new MemcachedCache(\n\t\t\t\t\t['memcached-server-1', 'memcached-server-2', 'memcached-server-3'],\n\t\t\t\t\t{ retries: 10, retry: 10000 } // Options\n\t\t\t\t)\n\t\t\t},\n\t\t\tinstallSubscriptionHandlers: true,\n\t\t\tintrospection: true,\n\t\t\tplayground: {\n\t\t\t\tsettings: {\n\t\t\t\t\t'editor.cursorShape': 'line', // possible values: 'line', 'block', 'underline'\n\t\t\t\t\t'editor.fontFamily': `'Source Code Pro', 'Consolas', 'Inconsolata', 'Droid Sans Mono', 'Monaco', monospace`,\n\t\t\t\t\t'editor.fontSize': 14,\n\t\t\t\t\t'editor.reuseHeaders': true, // new tab reuses headers from last tab\n\t\t\t\t\t'editor.theme': 'dark', // possible values: 'dark', 'light'\n\t\t\t\t\t'general.betaUpdates': false,\n\t\t\t\t\t'queryPlan.hideQueryPlanResponse': false,\n\t\t\t\t\t'request.credentials': 'include', // possible values: 'omit', 'include', 'same-origin'\n\t\t\t\t\t'tracing.hideTracingResponse': true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpCacheInterceptor.html":{"url":"injectables/HttpCacheInterceptor.html","title":"injectable - HttpCacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpCacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/http-cache.interceptor.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CacheInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trackBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackBy\n                        \n                        \n                    \n                \n            \n            \n                \ntrackBy(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/http-cache.interceptor.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CacheInterceptor, ExecutionContext, Injectable } from '@nestjs/common';\n\n@Injectable()\nclass HttpCacheInterceptor extends CacheInterceptor {\n  trackBy(context: ExecutionContext): string | undefined {\n    const request = context.switchToHttp().getRequest();\n    const httpServer = request.applicationRef;\n\n    const isGetRequest = httpServer.getRequestMethod(request) === 'GET';\n    const excludePaths = [];\n    if (\n      !isGetRequest ||\n      (isGetRequest && excludePaths.includes(httpServer.getRequestUrl))\n    ) {\n      return undefined;\n    }\n    return httpServer.getRequestUrl(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/http-exception.filter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n} from '@nestjs/common';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const statusCode = exception.getStatus();\n\n    response.status(statusCode).json({\n      statusCode,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middleware/logger.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middleware/logger.middleware.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  use(req: any, res: any, next: () => void) {\n    console.log(`Request...`);\n    // console.log(`[${context}] Request...`);\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/logging.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/logging.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    console.log('Before...');\n\n    const now = Date.now();\n    return next\n      .handle()\n      .pipe(tap(() => console.log(`After... ${Date.now() - now}ms`)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponse.html":{"url":"classes/LoginResponse.html","title":"class - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:66\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n\tEntity,\n\tColumn,\n\tObjectIdColumn,\n\tBeforeInsert,\n\tBeforeUpdate,\n\tBeforeRemove,\n\tCreateDateColumn,\n\tUpdateDateColumn,\n\tIndex\n} from 'typeorm'\nimport * as uuid from 'uuid'\nimport * as bcrypt from 'bcrypt'\nimport {\n\tIsString,\n\tIsNotEmpty,\n\tLength,\n\tMinLength,\n\tIsEmail,\n\tIsBoolean\n} from 'class-validator'\n\nexport class LoginUserInput {\n\t@IsString()\n\t@MinLength(4, {\n\t\tmessage: 'Your username must be at least 4 characters'\n\t})\n\t@IsNotEmpty()\n\tusername: string\n\t@Length(1, 8, {\n\t\tmessage: 'Your password must be between 1 and 8 characters.'\n\t})\n\t@IsString()\n\t@IsNotEmpty()\n\tpassword: string\n}\n\nexport class CreateUserInput {\n\t@IsString()\n\t@MinLength(4, {\n\t\tmessage: 'Your username must be at least 4 characters'\n\t})\n\t@IsNotEmpty({ message: 'Your username can not be blank.' })\n\tusername: string\n\n\t@Length(1, 8, {\n\t\tmessage: 'Your password must be between 1 and 8 characters.'\n\t})\n\t@IsString()\n\t@IsNotEmpty({ message: 'Your password can not be blank.' })\n\tpassword: string\n\n\t@IsEmail(undefined, { message: 'Invalid email message' })\n\t@IsNotEmpty({ message: 'Your email can not be blank.' })\n\temail: string\n}\n\nexport class LoginResponse {\n\t@IsString()\n\ttoken: string\n}\n\n@Entity()\nexport class User {\n\t@ObjectIdColumn()\n\t_id: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\tusername: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\tpassword: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\t@Index({ unique: true })\n\temail: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\trole: string\n\n\t@Column()\n\t@IsBoolean()\n\t@IsNotEmpty()\n\tstatus: boolean\n\n\t@CreateDateColumn({ type: 'timestamp' })\n\tcreatedAt: string\n\n\t@UpdateDateColumn({ type: 'timestamp' })\n\tupdatedAt: string\n\n\t@BeforeInsert()\n\tasync b4register() {\n\t\tthis._id = await uuid.v1()\n\t\tthis.role = await 'MEMBER'\n\t\tthis.status = await true\n\t\tthis.password = await bcrypt.hash(this.password, 10)\n\t}\n\n\t@BeforeUpdate()\n\tasync b4update() {\n\t\tthis.password = await bcrypt.hash(this.password, 10)\n\t}\n\n\t@BeforeRemove()\n\tasync b4block() {\n\t\tthis.status = false\n\t}\n\n\tasync matchesPassword(password) {\n\t\treturn await bcrypt.compare(password, this.password)\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserInput.html":{"url":"classes/LoginUserInput.html","title":"class - LoginUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Length(1, 8, {message: 'Your password must be between 1 and 8 characters.'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@MinLength(4, {message: 'Your username must be at least 4 characters'})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n\tEntity,\n\tColumn,\n\tObjectIdColumn,\n\tBeforeInsert,\n\tBeforeUpdate,\n\tBeforeRemove,\n\tCreateDateColumn,\n\tUpdateDateColumn,\n\tIndex\n} from 'typeorm'\nimport * as uuid from 'uuid'\nimport * as bcrypt from 'bcrypt'\nimport {\n\tIsString,\n\tIsNotEmpty,\n\tLength,\n\tMinLength,\n\tIsEmail,\n\tIsBoolean\n} from 'class-validator'\n\nexport class LoginUserInput {\n\t@IsString()\n\t@MinLength(4, {\n\t\tmessage: 'Your username must be at least 4 characters'\n\t})\n\t@IsNotEmpty()\n\tusername: string\n\t@Length(1, 8, {\n\t\tmessage: 'Your password must be between 1 and 8 characters.'\n\t})\n\t@IsString()\n\t@IsNotEmpty()\n\tpassword: string\n}\n\nexport class CreateUserInput {\n\t@IsString()\n\t@MinLength(4, {\n\t\tmessage: 'Your username must be at least 4 characters'\n\t})\n\t@IsNotEmpty({ message: 'Your username can not be blank.' })\n\tusername: string\n\n\t@Length(1, 8, {\n\t\tmessage: 'Your password must be between 1 and 8 characters.'\n\t})\n\t@IsString()\n\t@IsNotEmpty({ message: 'Your password can not be blank.' })\n\tpassword: string\n\n\t@IsEmail(undefined, { message: 'Invalid email message' })\n\t@IsNotEmpty({ message: 'Your email can not be blank.' })\n\temail: string\n}\n\nexport class LoginResponse {\n\t@IsString()\n\ttoken: string\n}\n\n@Entity()\nexport class User {\n\t@ObjectIdColumn()\n\t_id: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\tusername: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\tpassword: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\t@Index({ unique: true })\n\temail: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\trole: string\n\n\t@Column()\n\t@IsBoolean()\n\t@IsNotEmpty()\n\tstatus: boolean\n\n\t@CreateDateColumn({ type: 'timestamp' })\n\tcreatedAt: string\n\n\t@UpdateDateColumn({ type: 'timestamp' })\n\tupdatedAt: string\n\n\t@BeforeInsert()\n\tasync b4register() {\n\t\tthis._id = await uuid.v1()\n\t\tthis.role = await 'MEMBER'\n\t\tthis.status = await true\n\t\tthis.password = await bcrypt.hash(this.password, 10)\n\t}\n\n\t@BeforeUpdate()\n\tasync b4update() {\n\t\tthis.password = await bcrypt.hash(this.password, 10)\n\t}\n\n\t@BeforeRemove()\n\tasync b4block() {\n\t\tthis.status = false\n\t}\n\n\tasync matchesPassword(password) {\n\t\treturn await bcrypt.compare(password, this.password)\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyLogger.html":{"url":"classes/MyLogger.html","title":"class - MyLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        LoggerService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/main.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/main.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/main.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            verbose\n                        \n                        \n                    \n                \n            \n            \n                \nverbose(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/main.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/main.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NestFactory } from '@nestjs/core'\nimport { AppModule } from './app.module'\nimport { ExpressAdapter } from '@nestjs/platform-express'\n\nimport { Logger } from '@nestjs/common'\nimport { express as voyagerMiddleware } from 'graphql-voyager/middleware'\nimport * as dotenv from 'dotenv'\nimport helmet from 'helmet'\n// import csurf from 'csurf'\nimport rateLimit from 'express-rate-limit'\nimport logger from 'morgan'\nimport compression from 'compression'\nimport { ValidationPipe } from './common/pipes/validation.pipe'\n\nimport { LoggerService } from '@nestjs/common'\n\nexport class MyLogger implements LoggerService {\n\tlog(message: string) {}\n\terror(message: string, trace: string) {}\n\twarn(message: string) {}\n\tdebug(message: string) {}\n\tverbose(message: string) {}\n}\n\ndotenv.config()\nconst port = process.env.PORT || 3000\ndeclare const module: any\n\nasync function bootstrap() {\n\tconst app = await NestFactory.create(AppModule, {\n\t\tcors: true,\n\t\tlogger: new MyLogger()\n\t})\n\n\t// app.use(helmet())\n\t// app.use(csurf())\n\t// app.use(\n\t// \trateLimit({\n\t// \t\twindowMs: 15 * 60 * 1000, // 15 minutes\n\t// \t\tmax: 1, // limit each IP to 100 requests per windowMs\n\t// \t\tmessage:\n\t// \t\t\t'Too many request created from this IP, please try again after an hour'\n\t// \t})\n\t// )\n\n\t// logger.token('graphql-logger', req => {\n\t// \tconst { query, variables, operationName } = req.body\n\t// \treturn `graphql-logger: \\n\n\t// \tQuery: ${query} \\n\n\t// \tVariables: ${JSON.stringify(variables)}`\n\t// })\n\t// app.use(logger(':graphql-logger'))\n\tapp.use(compression())\n\n\tapp.use('/voyager', voyagerMiddleware({ endpointUrl: '/graphql' }))\n\tapp.useGlobalPipes(new ValidationPipe())\n\n\tawait app.listen(port)\n\n\tif (module.hot) {\n\t\tmodule.hot.accept()\n\t\tmodule.hot.dispose(() => app.close())\n\t}\n\n\tLogger.log(`&#x1F680; Server ready at http://localhost:${port}/graphql`, 'Bootstrap')\n\tLogger.log(\n\t\t`&#x1F680; Subscriptions ready at ws://localhost:${port}/graphql`,\n\t\t'Bootstrap'\n\t)\n}\nbootstrap()\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/transform.interceptor.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Response {\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor> {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(map(data => ({ data })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/roles.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/roles.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n    const hasRole = () =>\n      user.roles.some(role => !!roles.find(item => item === role));\n\n    return user && user.roles && hasRole();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/timeout.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/timeout.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(timeout(5000));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/transform.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/transform.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Response {\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor> {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(map(data => ({ data })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TypeormModule.html":{"url":"modules/TypeormModule.html","title":"module - TypeormModule","body":"\n                   \n\n\n\n\n    Modules\n    TypeormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TypeormModule\n\n\n\ncluster_TypeormModule_providers\n\n\n\n\nTypeormService\n\nTypeormService\n\n\n\nTypeormModule\n\nTypeormModule\n\nTypeormModule -->\n\nTypeormService->TypeormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/typeorm/typeorm.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TypeormService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeormService } from './typeorm.service';\n\n@Module({\n  providers: [TypeormService]\n})\nexport class TypeormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeormService.html":{"url":"injectables/TypeormService.html","title":"injectable - TypeormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TypeormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/typeorm/typeorm.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTypeOrmOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/typeorm/typeorm.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { TypeOrmOptionsFactory, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { getMetadataArgsStorage } from 'typeorm';\n\n@Injectable()\nexport class TypeormService implements TypeOrmOptionsFactory {\n  async createTypeOrmOptions(): Promise {\n    return {\n      type: 'mongodb',\n      url: 'mongodb://chnirt:chin04071803@ds055690.mlab.com:55690/nest-graphql',\n      entities: getMetadataArgsStorage().tables.map(tbl => tbl.target),\n      // entities: [User],\n      // entities: [__dirname + '/**/*.entity.ts'],\n      synchronize: true,\n      useNewUrlParser: true,\n      logging: true,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                b4block\n                            \n                            \n                                    Async\n                                b4register\n                            \n                            \n                                    Async\n                                b4update\n                            \n                            \n                                    Async\n                                matchesPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ObjectIdColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@IsString()@IsNotEmpty()@Index({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@IsBoolean()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user.entity.ts:77\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            b4block\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    b4block()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeRemove()\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.entity.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            b4register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    b4register()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.entity.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            b4update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    b4update()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeUpdate()\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.entity.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            matchesPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchesPassword(password)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.entity.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n\tEntity,\n\tColumn,\n\tObjectIdColumn,\n\tBeforeInsert,\n\tBeforeUpdate,\n\tBeforeRemove,\n\tCreateDateColumn,\n\tUpdateDateColumn,\n\tIndex\n} from 'typeorm'\nimport * as uuid from 'uuid'\nimport * as bcrypt from 'bcrypt'\nimport {\n\tIsString,\n\tIsNotEmpty,\n\tLength,\n\tMinLength,\n\tIsEmail,\n\tIsBoolean\n} from 'class-validator'\n\nexport class LoginUserInput {\n\t@IsString()\n\t@MinLength(4, {\n\t\tmessage: 'Your username must be at least 4 characters'\n\t})\n\t@IsNotEmpty()\n\tusername: string\n\t@Length(1, 8, {\n\t\tmessage: 'Your password must be between 1 and 8 characters.'\n\t})\n\t@IsString()\n\t@IsNotEmpty()\n\tpassword: string\n}\n\nexport class CreateUserInput {\n\t@IsString()\n\t@MinLength(4, {\n\t\tmessage: 'Your username must be at least 4 characters'\n\t})\n\t@IsNotEmpty({ message: 'Your username can not be blank.' })\n\tusername: string\n\n\t@Length(1, 8, {\n\t\tmessage: 'Your password must be between 1 and 8 characters.'\n\t})\n\t@IsString()\n\t@IsNotEmpty({ message: 'Your password can not be blank.' })\n\tpassword: string\n\n\t@IsEmail(undefined, { message: 'Invalid email message' })\n\t@IsNotEmpty({ message: 'Your email can not be blank.' })\n\temail: string\n}\n\nexport class LoginResponse {\n\t@IsString()\n\ttoken: string\n}\n\n@Entity()\nexport class User {\n\t@ObjectIdColumn()\n\t_id: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\tusername: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\tpassword: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\t@Index({ unique: true })\n\temail: string\n\n\t@Column()\n\t@IsString()\n\t@IsNotEmpty()\n\trole: string\n\n\t@Column()\n\t@IsBoolean()\n\t@IsNotEmpty()\n\tstatus: boolean\n\n\t@CreateDateColumn({ type: 'timestamp' })\n\tcreatedAt: string\n\n\t@UpdateDateColumn({ type: 'timestamp' })\n\tupdatedAt: string\n\n\t@BeforeInsert()\n\tasync b4register() {\n\t\tthis._id = await uuid.v1()\n\t\tthis.role = await 'MEMBER'\n\t\tthis.status = await true\n\t\tthis.password = await bcrypt.hash(this.password, 10)\n\t}\n\n\t@BeforeUpdate()\n\tasync b4update() {\n\t\tthis.password = await bcrypt.hash(this.password, 10)\n\t}\n\n\t@BeforeRemove()\n\tasync b4block() {\n\t\tthis.status = false\n\t}\n\n\tasync matchesPassword(password) {\n\t\treturn await bcrypt.compare(password, this.password)\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global } from '@nestjs/common'\nimport { UserResolver } from './user.resolver'\nimport { UserService } from './user.service'\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { User } from './user.entity'\n\n@Global()\n@Module({\n\timports: [TypeOrmModule.forFeature([User])],\n\tproviders: [UserResolver, UserService],\n\texports: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteAll\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                hello\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                me\n                            \n                            \n                                    Async\n                                setRole\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                user\n                            \n                            \n                                userCreated\n                            \n                            \n                                    Async\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.resolver.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(input: CreateUserInput, pubSub)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {name: 'register'})\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.resolver.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pubSub\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.resolver.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.resolver.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(input: LoginUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.resolver.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                LoginUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            me\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRole(_id: string, role: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.resolver.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(_id: string, input: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.resolver.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            user\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    user(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.resolver.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            userCreated\n                        \n                        \n                    \n                \n            \n            \n                \nuserCreated(pubSub)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Subscription()\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.resolver.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pubSub\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            users\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    users(offset: number, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.resolver.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n\tResolver,\n\tQuery,\n\tMutation,\n\tArgs,\n\tSubscription,\n\tContext\n} from '@nestjs/graphql'\nimport { PubSub } from 'graphql-subscriptions'\nimport { UserService } from './user.service'\nimport {\n\tUser,\n\tCreateUserInput,\n\tLoginResponse,\n\tLoginUserInput\n} from './user.entity'\n\n@Resolver('User')\nexport class UserResolver {\n\tconstructor(private readonly userService: UserService) {}\n\n\t@Query(() => String)\n\tasync hello() {\n\t\treturn await 'world'\n\t}\n\n\t@Query(() => User)\n\tasync me(@Context('currentUser') currentUser: User) {\n\t\treturn await currentUser\n\t}\n\n\t@Query(() => [User])\n\tasync users(@Args('offset') offset: number, @Args('limit') limit: number) {\n\t\treturn this.userService.findAll(offset, limit)\n\t}\n\n\t@Query(() => User)\n\tasync user(@Args('_id') _id: string) {\n\t\treturn this.userService.findById(_id)\n\t}\n\n\t@Mutation(() => User, { name: 'register' })\n\tasync createUser(\n\t\t@Args('input') input: CreateUserInput,\n\t\t@Context('pubSub') pubSub\n\t) {\n\t\tconst createdUser = await this.userService.create(input)\n\t\tpubSub.publish('userCreated', { userCreated: createdUser })\n\t\treturn createdUser\n\t}\n\n\t@Mutation(() => Boolean)\n\tasync updateUser(\n\t\t@Args('_id') _id: string,\n\t\t@Args('input') input: CreateUserInput\n\t) {\n\t\treturn await this.userService.update(_id, input)\n\t}\n\n\t@Mutation(() => Boolean)\n\tasync deleteUser(@Args('_id') _id: string) {\n\t\treturn await this.userService.delete(_id)\n\t}\n\n\t@Mutation(() => Boolean)\n\tasync deleteAll() {\n\t\treturn await this.userService.deleteAll()\n\t}\n\n\t@Mutation(() => LoginResponse)\n\tasync login(@Args('input') input: LoginUserInput) {\n\t\treturn await this.userService.login(input)\n\t}\n\n\t@Mutation(() => Boolean)\n\tasync setRole(@Args('_id') _id: string, @Args('role') role: string) {\n\t\treturn await this.userService.setRole(_id, role)\n\t}\n\n\t@Subscription()\n\tuserCreated(@Context('pubSub') pubSub) {\n\t\treturn pubSub.asyncIterator('userCreated')\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteAll\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOneByToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                setRole\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: MongoRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        MongoRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(offset: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(input: LoginUserInput)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                LoginUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRole(_id: string, role: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(_id: string, input: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport {\n\tUser,\n\tCreateUserInput,\n\tLoginResponse,\n\tLoginUserInput\n} from './user.entity'\nimport { MongoRepository } from 'typeorm'\nimport * as jwt from 'jsonwebtoken'\n\n@Injectable()\nexport class UserService {\n\tconstructor(\n\t\t@InjectRepository(User)\n\t\tprivate readonly userRepository: MongoRepository\n\t) {}\n\n\tasync findAll(offset: number, limit: number): Promise {\n\t\treturn await this.userRepository.find({\n\t\t\torder: { createdAt: 'DESC' },\n\t\t\tskip: offset,\n\t\t\ttake: limit,\n\t\t\tcache: true\n\t\t})\n\t}\n\n\tasync findById(_id: string): Promise {\n\t\treturn await this.userRepository.findOne({ _id })\n\t}\n\n\tasync create(input: CreateUserInput): Promise {\n\t\tconst { username, password, email } = input\n\t\tconst message = 'Email has already been taken.'\n\n\t\tconst existedUser = await this.userRepository.findOne({ email })\n\n\t\tif (existedUser) {\n\t\t\tthrow new Error(message)\n\t\t}\n\n\t\tconst user = new User()\n\t\tuser.username = username\n\t\tuser.password = password\n\t\tuser.email = email\n\t\treturn await this.userRepository.save(user)\n\t}\n\n\tasync update(_id: string, input: CreateUserInput): Promise {\n\t\tconst user = await this.userRepository.findOne({ _id })\n\t\t// user.username = input.username\n\t\tuser.password = input.password\n\t\t// user.email = input.email\n\t\treturn (await this.userRepository.save(user)) ? true : false\n\t}\n\n\tasync delete(_id: string): Promise {\n\t\tconst user = new User()\n\t\tuser._id = _id\n\t\treturn (await this.userRepository.remove(user)) ? true : false\n\t}\n\n\tasync deleteAll(): Promise {\n\t\treturn (await this.userRepository.deleteMany({})) ? true : false\n\t}\n\n\tasync login(input: LoginUserInput): Promise {\n\t\tconst { username, password } = input\n\t\tconst message = 'Incorrect email or password. Please try again.'\n\n\t\tconst user = await this.userRepository.findOne({ username })\n\n\t\tif (!user || !(await user.matchesPassword(password))) {\n\t\t\tthrow new Error(message)\n\t\t}\n\n\t\tconst token = await jwt.sign(\n\t\t\t{\n\t\t\t\tissuer: 'http://chnirt.dev.io',\n\t\t\t\tsubject: user._id,\n\t\t\t\taudience: user.username\n\t\t\t},\n\t\t\tprocess.env.SECRET_KEY,\n\t\t\t{\n\t\t\t\texpiresIn: '1d'\n\t\t\t}\n\t\t)\n\n\t\treturn { token }\n\t}\n\n\tasync findOneByToken(token: string) {\n\t\tconst message = 'The token you provided was invalid.'\n\t\tlet currentUser\n\n\t\ttry {\n\t\t\tlet decodeToken\n\n\t\t\tdecodeToken = await jwt.verify(token, process.env.SECRET_KEY)\n\n\t\t\tcurrentUser = await this.userRepository.findOne({\n\t\t\t\t_id: decodeToken.subject\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tthrow new Error(message)\n\t\t}\n\n\t\treturn currentUser\n\t}\n\n\tasync setRole(_id: string, role: string): Promise {\n\t\treturn (await this.userRepository.updateOne({ _id }, { $set: { role } }))\n\t\t\t? true\n\t\t\t: false\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/validation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                formatErrors\n                            \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            formatErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formatErrors(errors: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/validation.pipe.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/validation.pipe.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/validation.pipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  Injectable,\n  PipeTransform,\n  BadRequestException,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value: any, metadata: ArgumentMetadata) {\n    // if (value instanceof Object && this.isEmpty(value)) {\n    //   throw new HttpException(\n    //     'Validation failed: No body submitted',\n    //     HttpStatus.BAD_REQUEST,\n    //   );\n    // }\n    // destructuring metadata\n    const { metatype } = metadata;\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new HttpException(\n        `Validation failed: ${this.formatErrors(errors)}`,\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n    return value;\n  }\n\n  private toValidate(metatype): boolean {\n    const types = [String, Boolean, Number, Array, Object];\n    return !types.find(type => metatype === type);\n  }\n\n  private formatErrors(errors: any[]) {\n    return errors\n      .map(err => {\n        // tslint:disable-next-line: forin\n        for (const property in err.constraints) {\n          return err.constraints[property];\n        }\n      })\n      .join(', ');\n  }\n\n  // private isEmpty(value: any) {\n  //   if (Object.keys(value).length > 0) {\n  //     return false;\n  //   }\n  //   return true;\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception.interceptor.ts\n            \n            injectable\n            ErrorsInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/http-cache.interceptor.ts\n            \n            injectable\n            HttpCacheInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/logging.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/middleware/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/pipes/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/cache/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/graphql/graphql.service.ts\n            \n            injectable\n            GraphqlService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/graphql/graphql.service.ts\n            \n            variable\n            pubSub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm/typeorm.service.ts\n            \n            injectable\n            TypeormService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            class\n            MyLogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            port\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            LoginResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            LoginUserInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/user/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.0.0\n        \n            @nestjs/core : ^6.0.0\n        \n            @nestjs/graphql : ^6.2.4\n        \n            @nestjs/platform-express : ^6.0.0\n        \n            @nestjs/platform-socket.io : ^6.3.1\n        \n            @nestjs/typeorm : ^6.1.2\n        \n            @nestjs/websockets : ^6.3.1\n        \n            apollo-server-cache-memcached : ^0.5.0\n        \n            apollo-server-express : ^2.6.3\n        \n            bcrypt : ^3.0.6\n        \n            cache-manager : ^2.9.1\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.9.1\n        \n            compression : ^1.7.4\n        \n            csurf : ^1.10.0\n        \n            dotenv : ^8.0.0\n        \n            express-rate-limit : ^5.0.0\n        \n            graphql : ^14.3.1\n        \n            graphql-tools : ^4.0.4\n        \n            graphql-voyager : ^1.0.0-rc.27\n        \n            helmet : ^3.18.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            moment : ^2.24.0\n        \n            mongodb : ^3.2.7\n        \n            morgan : ^1.9.1\n        \n            pm2 : ^3.5.1\n        \n            reflect-metadata : ^0.1.12\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n        \n            typeorm : ^0.2.18\n        \n            uuid : ^3.3.2\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nbash\n$ npm install\nRunning the app\n```bash\ndevelopment\n$ npm run start\nwatch mode\n$ npm run start:dev\nproduction mode\n$ npm run start:prod\n```\nTest\n```bash\nunit tests\n$ npm run test\ne2e tests\n$ npm run test:e2e\ntest coverage\n$ npm run test:cov\n```\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CacheModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphqlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TypeormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_providers\n\n\n\ncluster_GraphqlModule\n\n\n\ncluster_GraphqlModule_providers\n\n\n\ncluster_TypeormModule\n\n\n\ncluster_TypeormModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCacheModule\n\nCacheModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCacheModule->AppModule\n\n\n\n\n\nGraphqlModule\n\nGraphqlModule\n\nAppModule -->\n\nGraphqlModule->AppModule\n\n\n\n\n\nTypeormModule\n\nTypeormModule\n\nAppModule -->\n\nTypeormModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nCacheService\n\nCacheService\n\nCacheModule -->\n\nCacheService->CacheModule\n\n\n\n\n\nGraphqlService\n\nGraphqlService\n\nGraphqlModule -->\n\nGraphqlService->GraphqlModule\n\n\n\n\n\nTypeormService\n\nTypeormService\n\nTypeormModule -->\n\nTypeormService->TypeormModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            port   (src/.../main.ts)\n                        \n                        \n                            pubSub   (src/.../graphql.service.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            port\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.PORT || 3000\n                        \n                    \n\n\n            \n        \n\n    src/config/graphql/graphql.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pubSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PubSub()\n                        \n                    \n\n\n            \n        \n\n    src/common/decorators/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: string[]) => SetMetadata('roles', roles)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
