input OrderJInput {
	menuId: String!
	dishId: String!
	count: Int!
}

type OrderJ {
	_id: ID!
	userId: String!
	menuId: String!
	dishId: String!
	note: String
	count: Int!
	isConfirmed: Boolean!
	createdAt: String!
	updatedAt: String!
}

type MenuOrderJ {
	menuId: String!
	dishes: [DishOrderJ!]!
}

type DishOrderJ {
	dishId: String!
	name: String!
	MyOrderQuantity: Int!
	orderQuantityNow: Int!
	orderQuantityMax: Int!
}

type Query {
	orderJs: [OrderJ!]!
	menuOrderJ(siteId: String!): MenuOrderJ!
}

type Mutation {
	orderJDish(input: OrderJInput!): OrderJ!
}

type Subscription {
	isUpdated: Boolean!
}
