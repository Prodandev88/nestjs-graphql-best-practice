directive @isAuthenticated on FIELD | FIELD_DEFINITION
directive @hasPermission(permission: String) on FIELD | FIELD_DEFINITION

input CreateUserInput {
	username: String!
	password: String!
	fullName: String!
}

input UpdateUserInput {
	fullName: String
}

input LoginUserInput {
	username: String!
	password: String!
}

type LoginResponse {
	token: String!
	sites: [LoginResponseInfo!]!
}

type LoginResponseInfo {
	_id: String!
	name: String!
}

type User {
	_id: ID!
	username: String!
	password: String!
	fullName: String!
	isLocked: Boolean!
	reason: String!
	isActive: Boolean!
	createdAt: String!
	updatedAt: String!
}

type Query {
	hello: String! @isAuthenticated
	me: User @isAuthenticated
	users(offset: Int, limit: Int): [User!] @isAuthenticated
	user(_id: String!): User @isAuthenticated
}

type Mutation {
	register(input: CreateUserInput!): User
		@hasPermission(permission: "USER_CREATE")
	updateUser(_id: String!, input: UpdateUserInput!): Boolean
		@hasPermission(permission: "USER_UPDATE")
	deleteUser(_id: String!): Boolean @hasPermission(permission: "USER_DELETE")
	deleteUsers: Boolean!
	login(input: LoginUserInput!): LoginResponse
	lockAndUnlock(_id: String!): Boolean
		@hasPermission(permission: "USER_LOCK_AND_UNLOCK")
}

type Subscription {
	userCreated: User
}
